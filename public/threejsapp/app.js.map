{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/browserify/lib/_empty.js","src/threejsapp/app.component.js","src/threejsapp/app.module.js","src/threejsapp/components/assets.component.js","src/threejsapp/components/codeeditor.component.js","src/threejsapp/components/editormenu.component.js","src/threejsapp/components/editorpanel.component.js","src/threejsapp/components/gameeditor.component.js","src/threejsapp/components/navmenu.component.js","src/threejsapp/components/objectprops.component.js","src/threejsapp/components/scene.component.js","src/threejsapp/components/scripteditorexplore.component.js","src/threejsapp/components/scripteditorlayout.component.js","src/threejsapp/components/scripteditormenu.component.js","src/threejsapp/index.js","src/threejsapp/services/game.service.js","src/threejsapp/threejs_framework/threejs_framework.js","src/threejsapp/threejs_framework/threejs_framework_editor.js","src/threejsapp/threejs_framework/threejs_framework_gundb.js","src/threejsapp/threejs_framework/threejs_framework_hud.js","src/threejsapp/threejs_framework/threejs_framework_loader.js","src/threejsapp/threejs_framework/threejs_framework_loadingscreen.js","src/threejsapp/threejs_framework/threejs_framework_module.js","src/threejsapp/threejs_framework/threejs_framework_network.js","src/threejsapp/threejs_framework/threejs_framework_physics.js","src/threejsapp/threejs_framework/threejs_framework_scene.js","src/threejsapp/threejs_framework/threejs_framework_script.js","src/threejsapp/threejs_framework/threejs_framework_ui.js","src/threejsapp/threejs_game/threejs_game.js","src/threejsapp/threejs_game/threejs_game_character.js","src/threejsapp/threejs_game/threejs_game_controller.js","src/threejsapp/threejs_game/threejs_game_css3d.js","src/threejsapp/threejs_game/threejs_game_hud.js","src/threejsapp/threejs_game/threejs_game_module.js","src/threejsapp/threejs_game/threejs_game_physics.js","src/threejsapp/threejs_game/threejs_game_scene.js","src/threejsapp/threejs_game/threejs_game_terrain.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","","//setup component main page html\r\n\r\nimport { Component } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport {GameService} from './services/game.service';\r\n\r\n\r\nimport '../js/jquery.min.js';\r\nimport '../js/jquery-ui.min.js';\r\nimport '../js/jquery.layout.min.js';\r\n\r\n@Component({\r\n    selector: 'main-app',\r\n    template: `\r\n    <gameeditor></gameeditor>\r\n    `\r\n})\r\nexport class MainApp {\r\n    constructor(gameservice:GameService){\r\n        console.log(gameservice);\r\n        this.gameservice = gameservice;\r\n    }\r\n}\r\n","//setup app\r\n\r\n//import { NgModule, Component, Input, Attribute } from '@angular/core';\r\nimport { NgModule, Component } from '@angular/core';\r\nimport { FormsModule }    from '@angular/forms';\r\n//import { LocationStrategy, HashLocationStrategy } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n//import { ActivatedRoute, RouterModule } from '@angular/router';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport {AceEditorDirective, AceEditorComponent} from 'ng2-ace-editor';\r\n\r\nimport { MainApp } from './app.component';\r\n\r\nimport {AssetsList} from './components/assets.component';\r\nimport {SceneList} from './components/scene.component';\r\nimport {Objectprops} from './components/objectprops.component';\r\nimport {GameEditor} from './components/gameeditor.component';\r\nimport {CodeEditor} from './components/codeeditor.component';\r\nimport {ScriptEditorExplore} from './components/scripteditorexplore.component';\r\nimport {ScriptEditorLayout} from './components/scripteditorlayout.component';\r\nimport {ScriptEditorMenu} from './components/scripteditormenu.component';\r\nimport {EditorMenu} from './components/editormenu.component';\r\nimport {EditorPanel} from './components/editorpanel.component';\r\n\r\n\r\nimport {NavMenu} from './components/navmenu.component';\r\nimport {GameService} from './services/game.service';\r\n\r\n//const routing = RouterModule.forRoot([\r\n    //{ path: '', component: Hello },\r\n    //{ path: 'ciao/:name', component: Ciao },\r\n//]);\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule\r\n    ],\r\n    declarations: [\r\n        MainApp,\r\n        AceEditorDirective,\r\n        AceEditorComponent,\r\n        GameEditor,\r\n        NavMenu,\r\n        ScriptEditorLayout,\r\n        SceneList,\r\n        AssetsList,\r\n        ScriptEditorMenu,\r\n        ScriptEditorExplore,\r\n        CodeEditor,\r\n        Objectprops,\r\n        EditorPanel,\r\n        EditorMenu\r\n    ],\r\n    providers: [\r\n        GameService\r\n    ],\r\n    bootstrap: [MainApp],\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport {GameService} from '../services/game.service';\r\n\r\n@Component({\r\n    selector: 'assets-list',\r\n    template: `\r\n        Assets\r\n        <!--<button (click)=\"refresh()\">Refresh</button>-->\r\n        <!--\r\n        <div *ngIf=\"gameservice.scene\">\r\n            <a *ngFor=\"let obj of gameservice.scene.children\">\r\n                <label>{{obj.name}}</label>\r\n            </a>\r\n        </div>\r\n        -->\r\n    `\r\n})\r\nexport class AssetsList {\r\n    constructor(gameservice:GameService){\r\n        //console.log(gameservice);\r\n        this.gameservice = gameservice;\r\n    }\r\n\r\n    refresh(){\r\n        console.log(\"refresh\");\r\n        console.log(this.gameservice);\r\n        //console.log(this.gameservice.scene.children[0]);\r\n    }\r\n}\r\n","//add \"AceEditorDirective\" to your modules list\r\n\r\nimport { AceEditorDirective } from 'ng2-ace-editor';\r\nimport { Component } from '@angular/core';\r\nimport 'zone.js/dist/zone';\r\n\r\n@Component({\r\n    selector: 'codeeditor-component',\r\n    template: `\r\n    <div ace-editor\r\n       [text]=\"text\"\r\n       [options]=\"options\"\r\n       [readOnly]=\"false\"\r\n       [autoUpdateContent]=\"true\"\r\n       (textChanged)=\"onChange($event)\"\r\n       style=\"min-height: 200px; height:100%; width:100%; overflow: auto;margin: 0;padding : 0;\"></div>\r\n    `\r\n})\r\nexport class CodeEditor {\r\n    text:string = \"Test\";\r\n    //options:any = {maxLines: 1000, printMargin: false};\r\n    options:any = { printMargin: false};\r\n\r\n    onChange(code) {\r\n        console.log(\"new code\", code);\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport {GameService} from '../services/game.service';\r\n\r\nimport '../../js/three.min.js';\r\n\r\n@Component({\r\n    selector: 'editormenu',\r\n    styleUrls:  ['./components/editormenu.component.css'],\r\n    template: `\r\n    <ul>\r\n    <li class=\"dropdown\" >\r\n    <a href=\"#\" class=\"dropbtn\">File</a>\r\n    <div class=\"dropdown-content\" style=\"z-index:5\">\r\n      <a href=\"#\" (click)=\"scriptopenscene();\">Open Scene</a>\r\n      <a href=\"#\" (click)=\"scriptloadscene();\">Load Scene</a>\r\n      <a href=\"#\" (click)=\"scriptsavescene();\">Save Scene</a>\r\n      <a href=\"#\" (click)=\"scriptclearscene();\">Clear Scene</a>\r\n      <a href=\"#\" (click)=\"scriptdeletescene();\">Delete Scene</a>\r\n    </div>\r\n    </li>\r\n    <li class=\"dropdown\">\r\n    <a href=\"#\" class=\"dropbtn\">Edit</a>\r\n    <div class=\"dropdown-content\" style=\"z-index:5\">\r\n      <a href=\"#\" (click)=\"scriptdeleteobject();\">Delete Object</a>\r\n    </div>\r\n    </li>\r\n\r\n    <li class=\"dropdown\">\r\n    <a href=\"#\" class=\"dropbtn\">Components</a>\r\n    <div class=\"dropdown-content\" style=\"z-index:5\">\r\n      <a href=\"#\" (click)=\"addcube();\" >Cube</a>\r\n      <a href=\"#\" (click)=\"addspshere();\">Sphere</a>\r\n      <a href=\"#\" (click)=\"addsplane();\">Plane</a>\r\n      <a href=\"#\" (click)=\"addmesh();\">Mesh</a>\r\n      <a href=\"#\" (click)=\"addmaterial();\">Material</a>\r\n    </div>\r\n    </li>\r\n    <!--\r\n    <li class=\"dropdown\"><a href=\"#\" class=\"dropbtn\">Packages</a>\r\n    <div class=\"dropdown-content\" style=\"z-index:5\">\r\n      <a href=\"#\">Scripts</a>\r\n      <a href=\"#\">Mods</a>\r\n    </div>\r\n    </li>\r\n    <li class=\"dropdown\"><a href=\"#\" class=\"dropbtn\">Help</a>\r\n    <div class=\"dropdown-content\" style=\"z-index:5\">\r\n      <a href=\"#\">Docs</a>\r\n      <a href=\"#\">About</a>\r\n    </div>\r\n    </li>\r\n    <li><a href=\"#\" class=\"dropbtn\" (click)=\"scriptbuild();\">Build</a></li>\r\n    <li><a href=\"#\" class=\"dropbtn\" (click)=\"scriptdebug();\">Debug</a></li>\r\n    <li><a href=\"#\" class=\"dropbtn\" (click)=\"scriptplay();\">Play</a></li>\r\n    <li><a href=\"#\" class=\"dropbtn\" (click)=\"scriptstop();\">Stop</a></li>\r\n    -->\r\n    </ul>\r\n    `\r\n})\r\nexport class EditorMenu {\r\n\r\n    constructor(gameservice:GameService){\r\n        this.gameservice = gameservice;\r\n    }\r\n\r\n    scriptopenscene(){\r\n        console.log(\"scriptopenscene\");\r\n    }\r\n\r\n    scriptloadscene(){\r\n        console.log(\"scriptloadscene\");\r\n    }\r\n\r\n    scriptsavescene(){\r\n        console.log(\"scriptsavescene\");\r\n    }\r\n\r\n    scriptdeletescene(){\r\n        console.log(\"scriptdeletescene\");\r\n    }\r\n\r\n    scriptclearscene(){\r\n        console.log(\"scriptclearscene\");\r\n        console.log(\"scriptclearscene\");\r\n        if(this.gameservice.scene !=null){\r\n            var objscene = this.gameservice.scene;\r\n            while (objscene.children.length)\r\n            {\r\n                objscene.remove(objscene.children[0]);\r\n            }\r\n        }\r\n    }\r\n\r\n    scriptdeleteobject(){\r\n        //console.log('scriptdeleteobject');\r\n        if(this.gameservice.selectobject !=null){\r\n            //this.gameservice.selectobject.dispose();\r\n            this.gameservice.scene.remove(this.gameservice.selectobject);\r\n            this.gameservice.selectobject = null;\r\n        }\r\n    }\r\n\r\n    scriptbuild(){\r\n        console.log('scriptbuild');\r\n    }\r\n\r\n    scriptdebug(){\r\n        console.log('scriptdebug');\r\n    }\r\n\r\n    scriptplay(){\r\n        console.log('scriptplay');\r\n    }\r\n\r\n    scriptstop(){\r\n        console.log('scriptstop');\r\n    }\r\n\r\n    addcube(){\r\n        console.log(\"addcube\");\r\n        if(this.gameservice.scene !=null){\r\n            console.log(\"cube\");\r\n            var geometry = new THREE.BoxGeometry( 1, 1, 1 );\r\n    \t\tvar material = new THREE.MeshBasicMaterial( { color: 0x00ffff } );\r\n    \t\tvar cube = new THREE.Mesh( geometry, material );\r\n            cube.name = \"cube\";\r\n    \t\tthis.gameservice.scene.add( cube );\r\n        }\r\n    }\r\n\r\n    addspshere(){\r\n        console.log(\"addspshere\");\r\n        if(this.gameservice.scene !=null){\r\n            console.log(\"cube\");\r\n            var geometry = new THREE.SphereGeometry( 1, 32, 32 );\r\n    \t\tvar material = new THREE.MeshBasicMaterial( {color: 0xffff00} );\r\n    \t\tvar sphere  = new THREE.Mesh( geometry, material );\r\n            sphere.name = \"sphere\";\r\n    \t\tthis.gameservice.scene.add( sphere  );\r\n        }\r\n    }\r\n\r\n    addsplane(){\r\n        console.log(\"addsplane\");\r\n        if(this.gameservice.scene !=null){\r\n            console.log(\"cube\");\r\n            var geometry = new THREE.PlaneBufferGeometry( 5, 5, 32 );\r\n    \t\tvar material = new THREE.MeshBasicMaterial( {color: 0xffff00, side: THREE.DoubleSide} );\r\n    \t\tvar plane = new THREE.Mesh( geometry, material );\r\n            plane.name = \"plane\";\r\n    \t\tthis.gameservice.scene.add( plane   );\r\n        }\r\n    }\r\n\r\n    addmesh(){\r\n        console.log(\"addmesh\");\r\n    }\r\n\r\n    addmaterial(){\r\n        console.log(\"addmaterial > ?\");\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'editorpanel',\r\n    styleUrls:  ['./components/editorpanel.component.css'],\r\n    template: `\r\n        <div style=\"height:100%;width:100%;\">\r\n            <div style=\"width:100%;height:32px;margin:0;padding:0;\">\r\n                <ul>\r\n                    <li> <a class=\"dropbtn\" href=\"#\">Script</a> </li>\r\n                    <li> <a class=\"dropbtn\" href=\"#\">Console</a> </li>\r\n                </ul>\r\n            </div>\r\n            <div style=\"width:20%;height:100%;float:left;margin:0;padding:0;\">\r\n                <scripteditormenu></scripteditormenu>\r\n                <scripteditorexplore></scripteditorexplore>\r\n            </div>\r\n            <div style=\"width:80%;height:100%;float:left;\">\r\n                <codeeditor-component style=\"margin:0;padding:0;\"></codeeditor-component>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class EditorPanel {\r\n\r\n}\r\n","//setup app\r\n\r\nimport { NgModule, Component, Input, Attribute } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport {GameService} from '../services/game.service';\r\n\r\nimport '../../js/three.min.js';\r\nimport '../../js/postprocessing/EffectComposer.js';\r\nimport '../../js/shaders/CopyShader.js';\r\n\r\nimport {Threejs_game} from '../threejs_game/threejs_game';\r\n\r\nimport '../../js/jquery.min.js';\r\nimport '../../js/jquery-ui.min.js';\r\nimport '../../js/jquery.layout.min.js';\r\n\r\n@Component({\r\n    selector: 'gameeditor',\r\n    template: `\r\n    <editormenu></editormenu>\r\n    <div id=\"container\" style=\"height:100%;\">\r\n        <div class=\"ui-layout-center\" style=\"margin: 0;padding : 0;\">\r\n            <!--<canvas id=\"renderCanvas\"></canvas>-->\r\n            <div id=\"renderCanvas\"></div>\r\n        </div>\r\n        <div class=\"ui-layout-north\">\r\n\r\n        </div>\r\n        <div class=\"ui-layout-south\" style=\"margin: 0;padding : 0;\">\r\n            <editorpanel></editorpanel>\r\n        </div>\r\n        <div class=\"ui-layout-east\">\r\n            <scene-list></scene-list>\r\n            <objectprops></objectprops>\r\n        </div>\r\n        <div class=\"ui-layout-west\">\r\n            <assets-list></assets-list>\r\n        </div>\r\n    </div>\r\n    `\r\n})\r\nexport class GameEditor implements OnInit{\r\n\r\n    scene = null;\r\n\r\n    constructor(gameservice:GameService){\r\n        this.gameservice = gameservice;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        console.log(\"init layout!\");\r\n\r\n        this.setup_layout();\r\n        this.init();\r\n    }\r\n\r\n    setup_layout(){\r\n        var self = this;\r\n        $('#container').layout({\r\n            resizable:true,\r\n            onresize:()=>{\r\n                //console.log(\"resize\");\r\n                self.resizecanvas();\r\n            }\r\n        });\r\n        var layout = $('#container').layout();\r\n        layout.sizePane(\"south\", 250);\r\n        layout.toggle(\"north\");\r\n    }\r\n\r\n    resizecanvas(){\r\n        if((this.camera !=null)&&(this.renderer != null)){\r\n            var layout = $('#container').layout();\r\n            var width     = layout.state.center.innerWidth;\r\n            var height     = layout.state.center.innerHeight;\r\n            //this.camera.aspect = width / height;\r\n            //this.camera.updateProjectionMatrix();\r\n            //this.renderer.setSize( width,height );\r\n            layout = null;\r\n            width = null;\r\n            height = null;\r\n        }\r\n    }\r\n\r\n    init(){\r\n        var config;\r\n        config = {bupdateobjects:true};\r\n        var game = new Threejs_game(config);\r\n        console.log(game);\r\n        this.gameservice.app = game;\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport {GameService} from '../services/game.service';\r\n\r\nimport '../../js/three.min.js';\r\n\r\n@Component({\r\n    selector: 'navmenu',\r\n    styleUrls:  ['./components/navmenu.component.css'],\r\n    template: `\r\n        <ul>\r\n        <li class=\"dropdown\" >\r\n        <a href=\"#\" class=\"dropbtn\">File</a>\r\n        <div class=\"dropdown-content\" style=\"z-index:5\">\r\n          <a href=\"#\">Open Scene</a>\r\n          <a href=\"#\">Load Scene</a>\r\n          <a href=\"#\">Save Scene</a>\r\n          <a href=\"#\"  (click)=\"clearscene();\">Clear Scene</a>\r\n          <a href=\"#\">Delete Scene</a>\r\n        </div>\r\n        </li>\r\n        <li class=\"dropdown\">\r\n        <a href=\"#\" class=\"dropbtn\">Edit</a>\r\n        <div class=\"dropdown-content\" style=\"z-index:5\">\r\n          <a href=\"#\">Delete Object</a>\r\n        </div>\r\n        </li>\r\n\r\n        <li class=\"dropdown\">\r\n        <a href=\"#\" class=\"dropbtn\">Components</a>\r\n        <div class=\"dropdown-content\" style=\"z-index:5\">\r\n          <a href=\"#\" (click)=\"addcube();\" >Cube</a>\r\n          <a href=\"#\">Sphere</a>\r\n          <a href=\"#\">Plane</a>\r\n          <a href=\"#\">Mesh</a>\r\n          <a href=\"#\">Material</a>\r\n        </div>\r\n        </li>\r\n        <li class=\"dropdown\"><a href=\"#\" class=\"dropbtn\">Packages</a>\r\n        <div class=\"dropdown-content\" style=\"z-index:5\">\r\n          <a href=\"#\">Scripts</a>\r\n          <a href=\"#\">Mods</a>\r\n        </div>\r\n        </li>\r\n        <li class=\"dropdown\"><a href=\"#\" class=\"dropbtn\">Help</a>\r\n        <div class=\"dropdown-content\" style=\"z-index:5\">\r\n          <a href=\"#\">Docs</a>\r\n          <a href=\"#\">About</a>\r\n        </div>\r\n        </li>\r\n        <li><a href=\"#\" class=\"dropbtn\">Build</a></li>\r\n        <li><a href=\"#\" class=\"dropbtn\">Debug</a></li>\r\n        <li><a href=\"#\" class=\"dropbtn\">Play</a></li>\r\n        <li><a href=\"#\" class=\"dropbtn\">Stop</a></li>\r\n        </ul>\r\n    `\r\n})\r\nexport class NavMenu {\r\n    constructor(gameservice:GameService){\r\n        this.gameservice = gameservice;\r\n    }\r\n\r\n    clearscene(){\r\n        if(this.gameservice.scene !=null){\r\n            var objscene = this.gameservice.scene;\r\n            while (objscene.children.length)\r\n            {\r\n                objscene.remove(objscene.children[0]);\r\n            }\r\n        }\r\n    }\r\n\r\n    addcube(){\r\n        if(this.gameservice.scene !=null){\r\n            console.log(\"cube\");\r\n            var geometry = new THREE.BoxGeometry( 1, 1, 1 );\r\n    \t\tvar material = new THREE.MeshBasicMaterial( { color: 0x00ffff } );\r\n    \t\tvar cube = new THREE.Mesh( geometry, material );\r\n            cube.name = \"cube\";\r\n    \t\tthis.gameservice.scene.add( cube );\r\n        }\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport {GameService} from '../services/game.service';\r\n\r\n@Component({\r\n    selector: 'objectprops',\r\n    template: `\r\n        <div style=\"height:50%;width:100%\">\r\n            Props:\r\n            <!--<button (click)=\"refresh()\">Refresh</button>-->\r\n            <div *ngIf=\"gameservice.selectobject\">\r\n                Object: {{gameservice.selectobject.uuid}}<button (click)=\"meshdelete()\">Delete</button>\r\n                <br><label>px:<input type=\"number\" ng-model='val | number: 2' [ngModel]=\"gameservice.selectobject.position.x\" value=\"{{gameservice.selectobject.position.x}}\" (ngModelChange)=\"objposx($event)\" step =\"0.000001\" /></label>\r\n                <br><label>py:<input type=\"number\" [ngModel]=\"gameservice.selectobject.position.y\" value=\"{{gameservice.selectobject.position.y}}\" (ngModelChange)=\"objposy($event)\" step =\"0.000001\" /></label>\r\n                <br><label>pz:<input type=\"number\" [ngModel]=\"gameservice.selectobject.position.z\" value=\"{{gameservice.selectobject.position.z}}\" (ngModelChange)=\"objposz($event)\" step =\"0.000001\" /></label>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class Objectprops {\r\n    posx = 0;\r\n\r\n    constructor(gameservice:GameService){\r\n        //console.log(gameservice);\r\n        this.gameservice = gameservice;\r\n    }\r\n\r\n    objposx(value){\r\n        console.log(value);\r\n        console.log(\"pos x\");\r\n        if(this.gameservice.selectobject !=null){\r\n            this.gameservice.selectobject.position.x = value;\r\n        }\r\n    }\r\n\r\n    objposy(value){\r\n        console.log(value);\r\n        console.log(\"pos y\");\r\n        if(this.gameservice.selectobject !=null){\r\n            this.gameservice.selectobject.position.y = value;\r\n        }\r\n    }\r\n\r\n    objposz(value){\r\n        console.log(value);\r\n        console.log(\"pos z\");\r\n        if(this.gameservice.selectobject !=null){\r\n            this.gameservice.selectobject.position.z = value;\r\n        }\r\n    }\r\n\r\n    meshdelete(){\r\n        console.log(\"delete\");\r\n        if(this.gameservice.selectobject !=null){\r\n            //this.gameservice.selectobject.dispose();\r\n            this.gameservice.scene.remove(this.gameservice.selectobject);\r\n            this.gameservice.selectobject = null;\r\n        }\r\n    }\r\n\r\n    refresh(){\r\n        //console.log(\"refresh\");\r\n        //console.log(this.gameservice);\r\n        //console.log(this.gameservice.scene.children[0]);\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport {GameService} from '../services/game.service';\r\n\r\n@Component({\r\n    selector: 'scene-list',\r\n    template: `\r\n        <div style=\"height:50%;width:100%\">\r\n            Scene\r\n            <!--<button (click)=\"refresh()\">Refresh</button>-->\r\n            <div *ngIf=\"gameservice.scene\">\r\n                <ul>\r\n                <li *ngFor=\"let obj of gameservice.scene.meshes\">\r\n                    <label (click)=\"selectobject(obj)\">{{obj.name}}</label>\r\n                </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class SceneList {\r\n    constructor(gameservice:GameService){\r\n        //console.log(gameservice);\r\n        this.gameservice = gameservice;\r\n    }\r\n\r\n    selectobject(_obj){\r\n        console.log(\"scene object selected:\");\r\n        console.log(_obj);\r\n        this.gameservice.selectobject = _obj;\r\n    }\r\n\r\n    refresh(){\r\n        console.log(\"refresh\");\r\n        console.log(this.gameservice);\r\n        console.log(this.gameservice.scene.children);\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'scripteditorexplore',\r\n    template: `\r\n        <div style=\"width:100%;\">\r\n        Panel directory folder\r\n        </div>\r\n    `\r\n})\r\nexport class ScriptEditorExplore {\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'scripteditorlayout',\r\n    template: `\r\n        <div style=\"height:100%;width:100%;\">\r\n            <div style=\"width:20%;height:100%;float:left;margin:0;padding:0;\">\r\n                <scripteditormenu></scripteditormenu>\r\n                <scripteditorexplore></scripteditorexplore>\r\n            </div>\r\n            <div style=\"width:80%;height:100%;float:left;\">\r\n            <codeeditor-component style=\"margin:0;padding:0;\"></codeeditor-component>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class ScriptEditorLayout {\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'scripteditormenu',\r\n    template: `\r\n        Action\r\n        <button (click)=\"ScriptReload();\">Reload</button>\r\n        <button (click)=\"ScriptSave();\">Save</button>\r\n        <button (click)=\"ScriptRun();\">Run</button>\r\n        <button (click)=\"ScriptCreate();\">Create</button>\r\n        <button (click)=\"ScriptDelete();\">Delete</button>\r\n    `\r\n})\r\nexport class ScriptEditorMenu {\r\n\r\n    ScriptReload(){\r\n        console.log('Reload');\r\n    }\r\n\r\n    ScriptSave(){\r\n        console.log('Save');\r\n    }\r\n\r\n    ScriptRun(){\r\n        console.log('Run');\r\n    }\r\n\r\n    ScriptDelete(){\r\n        console.log('Delete');\r\n    }\r\n\r\n    ScriptCreate(){\r\n        console.log('Create');\r\n    }\r\n}\r\n","//main entry and setup boot\r\n\r\nimport 'babel-polyfill';\r\nimport 'zone.js/dist/zone';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GameService {\r\n\r\n    scene = null;\r\n    selectobject = null;\r\n    app = null;\r\n\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\n\r\nimport {Threejs_framework_network} from './threejs_framework_network';\r\nimport {Threejs_framework_loadingscreen} from './threejs_framework_loadingscreen';\r\nimport {Threejs_framework_physics} from './threejs_framework_physics';\r\nimport {Threejs_framework_editor} from './threejs_framework_editor';\r\nimport {Threejs_framework_scene} from './threejs_framework_scene';\r\nimport {Threejs_framework_hud} from './threejs_framework_hud';\r\nimport {Threejs_framework_ui} from './threejs_framework_ui';\r\nimport {Threejs_framework_loader} from './threejs_framework_loader';\r\nimport {Threejs_framework_script} from './threejs_framework_script';\r\nimport {Threejs_framework_gundb} from './threejs_framework_gundb';\r\n//===============================================\r\n//main class entry\r\n//===============================================\r\nexport class Threejs_framework{\r\n\r\n    constructor(args){\r\n        var self = this;\r\n        if(!args){\r\n            args = {};\r\n            //console.log(\"no args...\");\r\n        }\r\n        var self = this;\r\n\r\n        this.version = \"0.0.1\";\r\n\t\tthis.antialias = true;//threejs\r\n\t\tthis.bfixedassetpath = true;\r\n\t\tthis.reload = false;//web browser editor reload url\r\n\r\n\t\tthis.ToRad = 0.0174532925199432957;\r\n\r\n\t\tthis.scene = null;\r\n\t\tthis.scenehud = null;\r\n\t\tthis.camera = null;\r\n\t\tthis.camerahud = null;\r\n\t\tthis.canvas = null;\r\n\t\tthis.renderer = null;\r\n\r\n\t\tthis.objects = [];\r\n\t\tthis.raycaster = new THREE.Raycaster();\r\n\t\tthis.mouse = new THREE.Vector2();\r\n\r\n\t\tthis.bablephysics = false;\r\n\t\tthis.physicsIndex = 2;\r\n\t\tthis.setPhysicsType = ['Oimo.js', 'Cannon.js', 'Ammo.js'];\r\n\t\tthis.timeSteptimeStep = 1 / 60;\r\n\t\tthis.world = null;\r\n\t\tthis.meshs = [];\r\n\t\tthis.bodies = [];\r\n\t\tthis.grounds = [];\r\n\r\n\t\tthis.scenenodes = [];//editor scene\r\n\t\tthis.mapscenenodes = [];\r\n\t\tthis.scriptcomponents = [];//javascript\r\n\r\n\t\tthis.mappdata;\r\n\t\tthis.scriptcount = 0;\r\n\t\tthis.loader = new THREE.XHRLoader();\r\n\r\n        //this.jspath = 'https://lightnet.github.io/bes-threejs/';\r\n        this.jspath = '';\r\n\r\n\t\tthis.scriptlist = [\r\n\t\t\t'../js/libs/threex.domevents.js',\r\n\t\t\t'../js/loaders/FBXLoader.js',\r\n\t\t\t'../js/loaders/collada/Animation.js',\r\n\t\t\t'../js/loaders/collada/AnimationHandler.js',\r\n\t\t\t'../js/loaders/collada/KeyFrameAnimation.js',\r\n\t\t\t'../js/loaders/ColladaLoader.js',\r\n\t\t\t'../js/loaders/OBJLoader.js',\r\n\t\t\t'../js/controls/TrackballControls.js',\r\n            '../js/controls/OrbitControls.js',\r\n            '../js/controls/FirstPersonControls.js',\r\n\t\t\t'../js/renderers/CSS3DRenderer.js'\r\n\t\t\t//'../js/postprocessing/EffectComposer.js',\r\n\t\t\t//'../js/postprocessing/RenderPass.js',\r\n            //'../js/postprocessing/ClearPass.js',\r\n\t\t\t//'../js/postprocessing/MaskPass.js',\r\n\t\t\t//'../js/postprocessing/ShaderPass.js'\r\n\t\t];\r\n\r\n        //this.scriptlist.push('/js/libs/three-interface.min.js'); //css3d\r\n\r\n        //new Threejs_framework_loadingscreen(this);\r\n        new Threejs_framework_network(this);\r\n        new Threejs_framework_physics(this);\r\n        new Threejs_framework_editor(this);\r\n        new Threejs_framework_scene(this);\r\n        new Threejs_framework_hud(this);\r\n        new Threejs_framework_ui(this);\r\n        new Threejs_framework_loader(this);\r\n        new Threejs_framework_gundb(this);\r\n        new Threejs_framework_script(this);\r\n\r\n        //this.initloadingscreen();\r\n\t\t//this.showloadingscreen();\r\n        //this.hideloadingscreen();\r\n\r\n        if(args != null){\r\n\t\t\tif(args['mode'] != null){\r\n\t\t\t\tthis.mode = args['mode'];\r\n\t\t\t}else{\r\n\t\t\t\tthis.mode = \"game;\";\r\n\t\t\t}\r\n\t\t\tconsole.log(\"mode: \"+this.mode);\r\n\t\t\tif (args['bupdateobjects'] != null) {\r\n                    this.bupdateobjects = args['bupdateobjects'];\r\n                }\r\n\t\t\tif (args['bfixedassetpath'] != null) {\r\n                this.bfixedassetpath = args['bfixedassetpath'];\r\n            }\r\n\t\t\tif (args['bablephysics'] != null) {\r\n                this.bablephysics = args['bablephysics'];\r\n            }\r\n\t\t\t//this need to be last else it variable are not assign\r\n            if (args['onload'] == true) {\r\n                console.log(\"load listen\");\r\n                this.addListener(\"load\", window, function () {\r\n                    //console.log('init window listen threejs setup... ');\r\n                    //_this.init();\r\n\t\t\t\t\tself.loadlibraries();\r\n                });\r\n            } else {\r\n                console.log(\"load\");\r\n                //console.log('init threejs setup...');\r\n                //this.init();\r\n\t\t\t\tthis.loadlibraries();\r\n            }\r\n\r\n\t\t\tif(args['load'] !=null ){\r\n\t\t\t\tthis.bmap = true;\r\n\t\t\t\tthis.mapurl = args['load'];\r\n\t\t\t}else{\r\n\t\t\t\tthis.bmap = false;\r\n\t\t\t\tthis.mapurl = \"\";\r\n\t\t\t}\r\n\t\t\t//console.log(\"Map: \" + this.bmap + \" url: \"+ this.mapurl);\r\n\t\t}\r\n    }\r\n\r\n    //RFC Type 4 (random) schema\r\n    uuid() {\r\n        var buf = new Uint32Array(4);\r\n        window.crypto.getRandomValues(buf);\r\n        var idx = -1;\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            idx++;\r\n            var r = (buf[idx>>3] >> ((idx%8)*4))&15;\r\n            var v = c == 'x' ? r : (r&0x3|0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    /*\r\n    initCannonPhysics() {\r\n\t\tif (typeof CANNON != undefined) {\r\n\t\t\tthis.world = new CANNON.World();\r\n\t\t\tthis.world.gravity.set(0, -9.82, 0);\r\n\t\t\tthis.world.broadphase = new CANNON.NaiveBroadphase();\r\n\t\t\tthis.world.solver.iterations = 10;\r\n\t\t}\r\n\t\t//this.createCannonScene();\r\n\t}\r\n\r\n\tupdateCannonPhysics() {\r\n\t\tif ((typeof this.world == 'undefined') || (this.world == null)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (typeof CANNON != undefined) {\r\n\t\t\tthis.world.step(this.timeSteptimeStep);\r\n\t\t}\r\n\t}\r\n\r\n\tdestroyCannonPhysics() {\r\n\t\tconsole.log('destroyCannonPhysics');\r\n\t}\r\n\r\n\tinitAmmoPhysics() {\r\n\t\t//https://github.com/kripken/ammo.js/blob/master/examples/hello_world.js\r\n\t\tif (typeof Ammo != undefined) {\r\n\t\t\tconsole.log('init Ammo');\r\n\t\t\tthis.collisionConfiguration = new Ammo.btDefaultCollisionConfiguration();\r\n\t\t\tthis.dispatcher = this.dp = new Ammo.btCollisionDispatcher(this.collisionConfiguration);\r\n\t\t\t//console.log(dispatcher);\r\n\t\t\tthis.overlappingPairCache = new Ammo.btDbvtBroadphase();\r\n\t\t\tthis.solver = new Ammo.btSequentialImpulseConstraintSolver();\r\n\t\t\tthis.world = new Ammo.btDiscreteDynamicsWorld(this.dispatcher, this.overlappingPairCache, this.solver, this.collisionConfiguration);\r\n\t\t\tthis.world.setGravity(new Ammo.btVector3(0, -10, 0));\r\n\t\t\tthis.trans = new Ammo.btTransform(); // taking this out of the loop below us reduces the leaking\r\n\t\t\t//this.createAmmoScene();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateAmmoPhysics() {\r\n\t\tif ((typeof this.world == 'undefined') || (this.world == null)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (typeof Ammo != undefined) {\r\n\t\t\tthis.world.stepSimulation(1 / 60, 10);\r\n            //console.log(this.world);\r\n\t\t}\r\n\t}\r\n\r\n\tdestroyAmmoPhysics() {\r\n\t\t//https://github.com/kripken/ammo.js/blob/master/examples/hello_world.js\r\n\t\t// Delete objects we created through |new|. We just do a few of them here, but you should do them all if you are not shutting down ammo.js\r\n\t\tAmmo.destroy(this.collisionConfiguration);\r\n\t\tAmmo.destroy(this.dispatcher);\r\n\t\tAmmo.destroy(this.overlappingPairCache);\r\n\t\tAmmo.destroy(this.solver);\r\n\t}\r\n\r\n\tinitOimoPhysics() {\r\n\t\tif (typeof OIMO != undefined) {\r\n\t\t\tthis.world = new OIMO.World(1 / 60, 2);\r\n\t\t\t//this.world.gravity = new OIMO.Vec3(0, -1, 0);\r\n\t\t\tthis.world.clear();\r\n\t\t\t//this.createOimoScene();\r\n\t\t\t//this.infos = document.getElementById(\"info\");\r\n\t\t}\r\n\t}\r\n\r\n\tupdateOimoPhysics() {\r\n\t\t//https://github.com/lo-th/Oimo.js/blob/gh-pages/test_moving.html\r\n\t\tif ((typeof this.world == 'undefined') || (this.world == null)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.world.step();\r\n\t}\r\n\r\n\tdestroyOimoPhysics() {\r\n        console.log('destroyOimoPhysics');\r\n    }\r\n\r\n\tupdatePhysics() {\r\n        //console.log(\"p\");\r\n\t\tif ((typeof this.world == 'undefined') || (this.world == null)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.setPhysicsType[this.physicsIndex] == 'Oimo.js') {\r\n\t\t\tthis.updateOimoPhysics();\r\n\t\t}\r\n\t\tif (this.setPhysicsType[this.physicsIndex] == 'Cannon.js') {\r\n\t\t\tthis.updateCannonPhysics();\r\n\t\t}\r\n\t\tif (this.setPhysicsType[this.physicsIndex] == 'Ammo.js') {\r\n\t\t\tthis.updateAmmoPhysics();\r\n\t\t}\r\n\t}\r\n\r\n\tinitPhysics() {\r\n\r\n        if (this.setPhysicsType[this.physicsIndex] == 'Oimo.js') {\r\n            this.initOimoPhysics();\r\n        }\r\n        if (this.setPhysicsType[this.physicsIndex] == 'Cannon.js') {\r\n            this.initCannonPhysics();\r\n        }\r\n        if (this.setPhysicsType[this.physicsIndex] == 'Ammo.js') {\r\n            this.initAmmoPhysics();\r\n        }\r\n\t\tconsole.log(\"init physics type:\" + this.setPhysicsType[this.physicsIndex]);\r\n    }\r\n    */\r\n\r\n\r\n\r\n    setup_render(){\r\n\t\t//this.setup_network();\r\n\r\n\t\tif((this.mode == \"css3dwebgl\")||(this.mode == \"editor\")){\r\n\t\t\t//css3d render\r\n\t\t\tthis.setup_css3d();\r\n\t\t}\r\n\r\n\t\t//webgl render\r\n\t\tthis.setup_webgl();\r\n\t\tthis.setup_hud();\r\n        this.setup_renderpass();\r\n\r\n\t\t//if(this.bmap){\r\n\t\t\t//this.load();\r\n\t\t//}\r\n\r\n\t\t//render pass with two secnes\r\n\t\tthis.render();\r\n\t\tif(this.bmap == false){\r\n\t\t\t//this.hideloadingscreen();\r\n\t\t}\r\n\t}\r\n\r\n    init(){\r\n        this.setup_render();\r\n\t\t//this.hideloadingscreen();\r\n\t\t//if(this.bablephysics){\r\n\t\t\t//this.initPhysics();\r\n\t\t//}\r\n\t\t//console.log(\"game init\");\r\n    }\r\n\r\n    update(){\r\n\r\n\t}\r\n\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_framework_module} from './threejs_framework_module';\r\n\r\nexport class Threejs_framework_editor extends Threejs_framework_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n    setup_editor(group){\r\n\t\t//ASSETS\r\n\t\t//autowidth:true,\r\n\t\tvar assetstable = new webix.ui({\r\n            container:\"assets\",\r\n            view:\"datatable\",\r\n            columns:[\r\n\t\t\t\t{ id:\"filetype\", header:\"Type\"},\r\n                { id:\"title\", header:\"Assets\",fillspace:true}\r\n            ],\r\n\t\t\tdata:[\r\n\t\t\t\t{id:1,title:\"test\"},\r\n\t\t\t\t{id:2,title:\"test2\"}\r\n\t\t\t],\r\n\t\t\tselect:\"row\",\r\n\t\t\ton:{\r\n    \t\t\t\"onItemClick\":function(id, e, trg){\r\n        \t\t\twebix.message(\"Click on row: \" + id.row+\", column: \" + id.column);\r\n\t\t\t\t}\r\n    \t\t} //default click behavior that is true for any datatable cell\r\n        });\r\n\r\n\t\tassetstable.add({\r\n\t\t    title:\"Best film ever\"\r\n\t\t});\r\n\r\n\t\tvar _div_l = document.createElement( 'div' );\r\n\t\t_div_l.style.width = '480px';\r\n\t\t_div_l.style.height = '360px';\r\n\t\t_div_l.style.backgroundColor = '#000';\r\n\r\n\t\t//var _element_l  = document.createElement('div');\r\n\t\t//_element_l.style.width = '480px';\r\n\t\t//_element_l.style.height = '360px';\r\n\t\t//_element_l.style.border = '0px';\r\n\t\t//_element_l.innerHTML = 'Plain text inside a div.<br>Assets?';\r\n    \t//_element_l.className = 'three-div';\r\n\t\t//_div_l.appendChild( _element_l );\r\n\r\n\t\tvar assetsid = document.getElementById('assets');\r\n\t\t_div_l.appendChild( assetsid );\r\n\r\n\t\tvar object = new THREE.CSS3DObject( _div_l );\r\n\t\tobject.position.set( -600, 100, 10 );\r\n\t\tobject.rotation.y = 0;\r\n\r\n\t\tgroup.add( object );\r\n\r\n\t\t// SCENE\r\n\t\tvar _div_r = document.createElement( 'div' );\r\n\t\t_div_r.style.width = '480px';\r\n\t\t_div_r.style.height = '360px';\r\n\t\t_div_r.style.backgroundColor = '#000';\r\n\r\n\t\t//var _element_r  = document.createElement('div');\r\n\t\t//_element_r.style.width = '480px';\r\n\t\t//_element_r.style.height = '360px';\r\n\t\t//_element_r.style.border = '0px';\r\n\t\t//_element_r.innerHTML = 'Plain text inside a div.<br>Scene?';\r\n    \t//_element_r.className = 'three-div';\r\n\t\t//_div_r.appendChild( _element_r );\r\n\r\n\t\tvar scenetable = new webix.ui({\r\n            container:\"scene\",\r\n            view:\"tree\",\r\n\t\t\tselect:true,\r\n\t\t\tdata: [\r\n\t\t        {id:\"root\", value:\"Cars\", open:true, data:[\r\n\t\t            { id:\"1\", open:true, value:\"Toyota\", data:[\r\n\t\t                { id:\"1.1\", value:\"Avalon\" },\r\n\t\t                { id:\"1.2\", value:\"Corolla\" },\r\n\t\t                { id:\"1.3\", value:\"Camry\" }\r\n\t\t            ]},\r\n\t\t            { id:\"2\", open:true, value:\"Skoda\", data:[\r\n\t\t                { id:\"2.1\", value:\"Octavia\" },\r\n\t\t                { id:\"2.2\", value:\"Superb\" }\r\n\t\t            ]}\r\n\t\t        ]}\r\n\t\t    ],\r\n\t\t\tselect: true,\r\n\t\t\ton: {\"onItemClick\": function (id, e, node) {\r\n\t\t\t\t//alert(\"item has just been clicked\");\r\n\t\t\t\tvar item = this.getItem(id);\r\n\t\t\t\tconsole.log(item);\r\n\t\t\t}}\r\n        });\r\n\t\t//http://docs.webix.com/api__link__ui.tree_onitemclick_event.html\r\n\t\t//console.log(scenetable);\r\n\r\n\t\tscenetable.add({ value:\"New item\"}, 0);\r\n\r\n\t\t//scenetable.add( {value:\"New item\"}, 0, parentId);\r\n\t\t//var nodeId = tree.getSelectedId();\r\n\t\tscenetable.add( {value:\"New item\"}, 0, 2);\r\n\r\n\t\tvar sceneid = document.getElementById('scene');\r\n\t\t_div_r.appendChild( sceneid );\r\n\r\n\t\tvar object = new THREE.CSS3DObject( _div_r );\r\n\t\tobject.position.set( 600, 100, 10 );\r\n\t\tobject.rotation.y = 0;\r\n\r\n\t\tgroup.add( object );\r\n\t}\r\n\r\n    //===============================================\r\n    // Tool bar\r\n    //===============================================\r\n\r\n    toolbar(action) {\r\n\t\t//console.log(action);\r\n\t\tif (action == 'EditorComponents:Object3D') {\r\n\t\t\tthis.createshape({ shape: \"Object3D\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:Scene') {\r\n\t\t\tthis.createshape({ shape: \"Scene\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:BoxGeometry') {\r\n\t\t\tthis.createshape({ shape: \"BoxGeometry\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:CylinderGeometry') {\r\n\t\t\tthis.createshape({ shape: \"CylinderGeometry\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:CircleGeometry') {\r\n\t\t\tthis.createshape({ shape: \"CircleGeometry\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:PlaneGeometry') {\r\n\t\t\tthis.createshape({ shape: \"PlaneGeometry\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:SphereGeometry') {\r\n\t\t\tthis.createshape({ shape: \"SphereGeometry\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:DodecahedronGeometry') {\r\n\t\t\tthis.createshape({ shape: \"DodecahedronGeometry\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:IcosahedronGeometry') {\r\n\t\t\tthis.createshape({ shape: \"IcosahedronGeometry\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:OctahedronGeometry') {\r\n\t\t\tthis.createshape({ shape: \"OctahedronGeometry\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:RingGeometry') {\r\n\t\t\tthis.createshape({ shape: \"RingGeometry\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:TetrahedronGeometry') {\r\n\t\t\tthis.createshape({ shape: \"TetrahedronGeometry\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:TorusGeometry') {\r\n\t\t\tthis.createshape({ shape: \"TorusGeometry\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:TorusKnotGeometry') {\r\n\t\t\tthis.createshape({ shape: \"TorusKnotGeometry\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:TextGeometry') {\r\n\t\t\tthis.createshape({ shape: \"TextGeometry\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:ArrowHelper') {\r\n\t\t\tthis.createshape({ shape: \"ArrowHelper\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:AxisHelper') {\r\n\t\t\tthis.createshape({ shape: \"AxisHelper\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:BoundingBoxHelper') {\r\n\t\t\tthis.createshape({ shape: \"BoundingBoxHelper\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:EdgesHelper') {\r\n\t\t\tthis.createshape({ shape: \"EdgesHelper\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:FaceNormalsHelper') {\r\n\t\t\tthis.createshape({ shape: \"FaceNormalsHelper\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:GridHelper') {\r\n\t\t\tthis.createshape({ shape: \"GridHelper\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:PointLightHelper') {\r\n\t\t\tthis.createshape({ shape: \"PointLightHelper\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:SpotLightHelper') {\r\n\t\t\tthis.createshape({ shape: \"SpotLightHelper\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:VertexNormalsHelper') {\r\n\t\t\tthis.createshape({ shape: \"VertexNormalsHelper\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:WireframeHelper') {\r\n\t\t\tthis.createshape({ shape: \"WireframeHelper\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:Sprite2D') {\r\n\t\t\tthis.createshape({ shape: \"Sprite\" });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:CubeCamera') {\r\n\t\t\tthis.createObjectScene({ object: 'CubeCamera' });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:PerspectiveCamera') {\r\n\t\t\tthis.createObjectScene({ object: 'PerspectiveCamera' });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:OrthographicCamera') {\r\n\t\t\tthis.createObjectScene({ object: 'OrthographicCamera' });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:AmbientLight') {\r\n\t\t\tthis.createObjectScene({ object: 'AmbientLight' });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:DirectionalLight') {\r\n\t\t\tthis.createObjectScene({ object: 'DirectionalLight' });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:HemisphereLight') {\r\n\t\t\tthis.createObjectScene({ object: 'HemisphereLight' });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:Light') {\r\n\t\t\tthis.createObjectScene({ object: 'Light' });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:PointLight') {\r\n\t\t\tthis.createObjectScene({ object: 'PointLight' });\r\n\t\t}\r\n\t\tif (action == 'EditorComponents:SpotLight') {\r\n\t\t\tthis.createObjectScene({ object: 'SpotLight' });\r\n\t\t}\r\n\t}\r\n\r\n    //===============================================\r\n    //\r\n    //===============================================\r\n\r\n    createObjectScene(args) {\r\n\t\tif (args != null) {\r\n            if (args['object'] != null) {\r\n                var objscene;\r\n                if (args['object'] == 'PerspectiveCamera') {\r\n                    objscene = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 10000);\r\n                    objscene.name = \"PerspectiveCamera\";\r\n                    var cameraHelper = new THREE.CameraHelper(objscene);\r\n                    //this.scene.add(cameraHelper);\r\n                    objscene.add(cameraHelper);\r\n                }\r\n                if (args['object'] == 'OrthographicCamera') {\r\n                    objscene = new THREE.OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, 1, 10000);\r\n                    objscene.name = \"OrthographicCamera\";\r\n                    var cameraHelper = new THREE.CameraHelper(objscene);\r\n                    objscene.helper = cameraHelper;\r\n                    this.scene.add(cameraHelper);\r\n                }\r\n                if (args['object'] == 'CubeCamera') {\r\n                    objscene = new THREE.CubeCamera(1, 100000, 128);\r\n                    objscene.name = \"CubeCamera\";\r\n                }\r\n                if (args['object'] == 'AmbientLight') {\r\n                    objscene = new THREE.AmbientLight(0x404040); // soft white light\r\n                    objscene.name = \"AmbientLight\";\r\n                }\r\n                if (args['object'] == 'DirectionalLight') {\r\n                    objscene = new THREE.DirectionalLight(0xffffff, 0.5);\r\n                    objscene.position.set(0, 1, 0);\r\n                    objscene.name = \"DirectionalLight\";\r\n                    var dlightHelper = new THREE.DirectionalLightHelper(objscene, 5);\r\n                    objscene.helper = dlightHelper;\r\n                    this.scene.add(dlightHelper);\r\n                }\r\n                if (args['object'] == 'HemisphereLight') {\r\n                    objscene = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\r\n                    objscene.name = \"HemisphereLight\";\r\n                    var HLightHelper = new THREE.HemisphereLightHelper(objscene, 5);\r\n                    objscene.helper = HLightHelper;\r\n                    this.scene.add(HLightHelper);\r\n                }\r\n                if (args['object'] == 'Light') {\r\n                    objscene = new THREE.Light(0xff0000);\r\n                    objscene.name = \"Light\";\r\n                }\r\n                if (args['object'] == 'PointLight') {\r\n                    objscene = new THREE.PointLight(0xff0000, 1, 100);\r\n                    objscene.name = \"PointLight\";\r\n                    var pointLightHelper = new THREE.PointLightHelper(objscene, 5);\r\n                    objscene.helper = pointLightHelper;\r\n                    this.scene.add(pointLightHelper);\r\n                }\r\n                if (args['object'] == 'SpotLight') {\r\n                    objscene = new THREE.SpotLight(0xffffff);\r\n                    objscene.name = \"SpotLight\";\r\n                    var spotLightHelper = new THREE.SpotLightHelper(objscene);\r\n                    objscene.helper = spotLightHelper;\r\n                    this.scene.add(spotLightHelper);\r\n                }\r\n                if (objscene != null) {\r\n                    if (this.selectobject != null) {\r\n                        this.selectobject.add(objscene); //attach to current selected\r\n                    }\r\n                    else {\r\n                        this.scene.add(objscene);\r\n                    }\r\n                    this.scenenodes.push(objscene);\r\n                    //console.log('create object?');\r\n                    console.log(objscene);\r\n                    NodeSelectObject({ object: objscene });\r\n                    var tmpmap = this.copyobjectprops(objscene);\r\n                    //console.log(tmpmap);\r\n                    this.mapscenenodes.push(tmpmap);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //===============================================\r\n    //\r\n    //===============================================\r\n\r\n    parentObj(object, uuid) {\r\n\t\t//console.log(\"ADDED\");\r\n\t\t//var geometry = new THREE.BoxGeometry( 1, 1, 1 );\r\n\t\t//var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\r\n\t\t//var cube = new THREE.Mesh( geometry, material );\r\n\t\t//this.scene.add(cube);\r\n\t\t//this.scene.add(object);\r\n\t\t//this.camera.position.z = 5;\r\n\t\tfor (var i = 0; i < this.scenenodes.length; i++) {\r\n\t\t\tif (this.scenenodes[i].uuid == uuid) {\r\n\t\t\t\t//console.log(\"added?\");\r\n\t\t\t\tthis.scenenodes[i].add(object);\r\n\t\t\t\t//console.log(this.scenenodes[i]);\r\n\t\t\t\t//console.log(\"===?\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseObject(strobj) {\r\n        var tmpobj;\r\n        var geometry;\r\n        var objmesh;\r\n        var edges;\r\n        var material;\r\n        var obj;\r\n\r\n        material = new THREE.MeshPhongMaterial({\r\n            color: 0x156289,\r\n            polygonOffset: true,\r\n            polygonOffsetFactor: 1,\r\n            polygonOffsetUnits: 1\r\n        });\r\n        if (typeof strobj == 'string') {\r\n            obj = JSON.parse(strobj);\r\n        }\r\n        else {\r\n            obj = strobj;\r\n        }\r\n        //console.log(obj);\r\n        //this.mapscenenodes.push(obj);\r\n        if (obj.type == \"Object3D\") {\r\n            objmesh = new THREE.Object3D();\r\n            objmesh.uuid = obj.uuid;\r\n            objmesh.name = obj.name;\r\n        }\r\n        if (obj.type == \"CubeCamera\") {\r\n            objmesh = new THREE.CubeCamera(obj.near, obj.far, obj.cubeResolution);\r\n            objmesh.uuid = obj.uuid;\r\n            objmesh.name = obj.name;\r\n        }\r\n        if (obj.type == \"OrthographicCamera\") {\r\n            objmesh = new THREE.OrthographicCamera(obj.left, obj.right, obj.top, obj.bottom, obj.near, obj.far);\r\n            objmesh.uuid = obj.uuid;\r\n            objmesh.name = obj.name;\r\n            var cameraHelper = new THREE.CameraHelper(objmesh);\r\n            objmesh.helper = cameraHelper;\r\n            this.scene.add(cameraHelper);\r\n        }\r\n        if (obj.type == \"PerspectiveCamera\") {\r\n            objmesh = new THREE.PerspectiveCamera(obj.fov, obj.aspect, obj.near, obj.far);\r\n            objmesh.uuid = obj.uuid;\r\n            objmesh.name = obj.name;\r\n            var cameraHelper = new THREE.CameraHelper(objmesh);\r\n            objmesh.helper = cameraHelper;\r\n            this.scene.add(cameraHelper);\r\n        }\r\n        if (obj.type == \"AmbientLight\") {\r\n            objmesh = new THREE.AmbientLight(obj.color, obj.intensity);\r\n            objmesh.uuid = obj.uuid;\r\n            objmesh.name = obj.name;\r\n        }\r\n        if (obj.type == \"DirectionalLight\") {\r\n            objmesh = new THREE.DirectionalLight(obj.color, obj.intensity);\r\n            objmesh.uuid = obj.uuid;\r\n            objmesh.name = obj.name;\r\n            var dlightHelper = new THREE.DirectionalLightHelper(objmesh, 5);\r\n            objmesh.helper = dlightHelper;\r\n            this.scene.add(dlightHelper);\r\n        }\r\n        if (obj.type == \"HemisphereLight\") {\r\n            objmesh = new THREE.HemisphereLight(obj.skyColor, obj.groundColor, obj.intensity);\r\n            //console.log(obj.skyColor);\r\n            objmesh.uuid = obj.uuid;\r\n            objmesh.name = obj.name;\r\n            var HLightHelper = new THREE.HemisphereLightHelper(objmesh, 5);\r\n            objmesh.helper = HLightHelper;\r\n            this.scene.add(HLightHelper);\r\n        }\r\n        if (obj.type == \"Light\") {\r\n            objmesh = new THREE.Light(obj.color, obj.intensity);\r\n            objmesh.uuid = obj.uuid;\r\n            objmesh.name = obj.name;\r\n        }\r\n        if (obj.type == \"PointLight\") {\r\n            objmesh = new THREE.PointLight(obj.color, obj.intensity, obj.distance, obj.decay);\r\n            objmesh.uuid = obj.uuid;\r\n            objmesh.name = obj.name;\r\n            var pointLightHelper = new THREE.PointLightHelper(objmesh, 5);\r\n            objmesh.helper = pointLightHelper;\r\n            this.scene.add(pointLightHelper);\r\n        }\r\n        if (obj.type == \"SpotLight\") {\r\n            objmesh = new THREE.SpotLight(obj.color, obj.intensity, obj.distance, obj.angle, obj.penumbra, obj.decay);\r\n            objmesh.uuid = obj.uuid;\r\n            objmesh.name = obj.name;\r\n            var spotLightHelper = new THREE.SpotLightHelper(objmesh);\r\n            objmesh.helper = spotLightHelper;\r\n            this.scene.add(spotLightHelper);\r\n        }\r\n        if (obj.type == \"Scene\") {\r\n            objmesh = new THREE.Scene();\r\n            objmesh.uuid = obj.uuid;\r\n            objmesh.name = obj.name;\r\n        }\r\n        //console.log(objmesh);\r\n        if (obj.type == \"Mesh\") {\r\n            if (obj.geometrytype == \"BoxGeometry\") {\r\n                geometry = new THREE.BoxGeometry(obj.parameters.width, obj.parameters.height, obj.parameters.depth, obj.parameters.widthSegments, obj.parameters.heightSegments, obj.parameters.depthSegments);\r\n                objmesh = new THREE.Mesh(geometry, material);\r\n                objmesh.uuid = obj.uuid;\r\n                objmesh.name = obj.name;\r\n            }\r\n            if (obj.geometrytype == \"CircleGeometry\") {\r\n                geometry = new THREE.CircleGeometry(obj.parameters.radius, obj.parameters.segments, obj.parameters.thetaStart, obj.parameters.thetaLength);\r\n                objmesh = new THREE.Mesh(geometry, material);\r\n                objmesh.uuid = obj.uuid;\r\n                objmesh.name = obj.name;\r\n            }\r\n            if (obj.geometrytype == \"CylinderGeometry\") {\r\n                geometry = new THREE.CylinderGeometry(obj.parameters.radiusTop, obj.parameters.radiusBottom, obj.parameters.height, obj.parameters.radiusSegments, obj.parameters.heightSegments, obj.parameters.openEnded, obj.parameters.thetaStart, obj.parameters.thetaLength);\r\n                objmesh = new THREE.Mesh(geometry, material);\r\n                objmesh.uuid = obj.uuid;\r\n                objmesh.name = obj.name;\r\n            }\r\n            if (obj.geometrytype == \"PlaneGeometry\") {\r\n                geometry = new THREE.PlaneGeometry(obj.parameters.width, obj.parameters.height, obj.parameters.widthSegments, obj.parameters.heightSegments);\r\n                objmesh = new THREE.Mesh(geometry, material);\r\n                objmesh.uuid = obj.uuid;\r\n                objmesh.name = obj.name;\r\n            }\r\n            if (obj.geometrytype == \"PlaneGeometry\") {\r\n                geometry = new THREE.PlaneGeometry(obj.parameters.width, obj.parameters.height, obj.parameters.widthSegments, obj.parameters.heightSegments);\r\n                objmesh = new THREE.Mesh(geometry, material);\r\n                objmesh.uuid = obj.uuid;\r\n                objmesh.name = obj.name;\r\n            }\r\n            if (obj.geometrytype == \"SphereGeometry\") {\r\n                geometry = new THREE.SphereGeometry(obj.parameters.radius, obj.parameters.widthSegments, obj.parameters.heightSegments, obj.parameters.phiStart, obj.parameters.phiLength, obj.parameters.thetaStart, obj.parameters.thetaLength);\r\n                objmesh = new THREE.Mesh(geometry, material);\r\n                objmesh.uuid = obj.uuid;\r\n                objmesh.name = obj.name;\r\n            }\r\n            if (obj.geometrytype == \"DodecahedronGeometry\") {\r\n                geometry = new THREE.DodecahedronGeometry(obj.parameters.radius, obj.parameters.detail);\r\n                objmesh = new THREE.Mesh(geometry, material);\r\n                objmesh.uuid = obj.uuid;\r\n                objmesh.name = obj.name;\r\n            }\r\n            if (obj.geometrytype == \"IcosahedronGeometry\") {\r\n                geometry = new THREE.IcosahedronGeometry(obj.parameters.radius, obj.parameters.detail);\r\n                objmesh = new THREE.Mesh(geometry, material);\r\n                objmesh.uuid = obj.uuid;\r\n                objmesh.name = obj.name;\r\n            }\r\n            if (obj.geometrytype == \"OctahedronGeometry\") {\r\n                geometry = new THREE.OctahedronGeometry(obj.parameters.radius, obj.parameters.detail);\r\n                objmesh = new THREE.Mesh(geometry, material);\r\n                objmesh.uuid = obj.uuid;\r\n                objmesh.name = obj.name;\r\n            }\r\n            if (obj.geometrytype == \"RingGeometry\") {\r\n                geometry = new THREE.RingGeometry(obj.parameters.innerRadius, obj.parameters.outerRadius, obj.parameters.thetaSegments, obj.parameters.phiSegments, obj.parameters.thetaStart, obj.parameters.thetaLength);\r\n                objmesh = new THREE.Mesh(geometry, material);\r\n                objmesh.uuid = obj.uuid;\r\n                objmesh.name = obj.name;\r\n            }\r\n            if (obj.geometrytype == \"TetrahedronGeometry\") {\r\n                geometry = new THREE.TetrahedronGeometry(obj.parameters.radius, obj.parameters.detail);\r\n                objmesh = new THREE.Mesh(geometry, material);\r\n                objmesh.uuid = obj.uuid;\r\n                objmesh.name = obj.name;\r\n            }\r\n            if (obj.geometrytype == \"TorusGeometry\") {\r\n                geometry = new THREE.TorusGeometry(obj.parameters.radius, obj.parameters.tube, obj.parameters.radialSegments, obj.parameters.tubularSegments, obj.parameters.arc);\r\n                objmesh = new THREE.Mesh(geometry, material);\r\n                objmesh.uuid = obj.uuid;\r\n                objmesh.name = obj.name;\r\n            }\r\n            if (obj.geometrytype == \"TorusKnotGeometry\") {\r\n                geometry = new THREE.TorusKnotGeometry(obj.parameters.radius, obj.parameters.tube, obj.parameters.radialSegments, obj.parameters.tubularSegments, obj.parameters.p, obj.parameters.q, obj.parameters.heightScale);\r\n                objmesh = new THREE.Mesh(geometry, material);\r\n                objmesh.uuid = obj.uuid;\r\n                objmesh.name = obj.name;\r\n            }\r\n        }\r\n        //check if script component exist\r\n        if (obj.script != null) {\r\n            if (objmesh != null) {\r\n                objmesh.script = {};\r\n                for (var os in obj.script) {\r\n                    this.createComponent(objmesh, os);\r\n                    for (var sv in obj.script[os]) {\r\n                        if (typeof obj.script[os][sv] != 'function') {\r\n                            //need make object data variable work current doesn't work\r\n                            if (typeof obj.script[os][sv] == 'object') {\r\n                                //console.log('OBJECT    script');\r\n                                //console.log('obj.script'+ os+'.'+sv);\r\n                                if (Array.isArray(obj.script[os][sv])) {\r\n                                    //console.log('found array object');\r\n                                    objmesh.script[os][sv] = obj.script[os][sv];\r\n                                }\r\n                                else {\r\n                                    if (obj.script[os][sv].type != null) {\r\n                                        //console.log('found type! :'+obj.script[os][sv].type);\r\n                                        if (obj.script[os][sv].type == 'THREE.Vector2') {\r\n                                            objmesh.script[os][sv] = new THREE.Vector2(obj.script[os][sv].x, obj.script[os][sv].y);\r\n                                        }\r\n                                        if (obj.script[os][sv].type == 'THREE.Vector3') {\r\n                                            objmesh.script[os][sv] = new THREE.Vector3(obj.script[os][sv].x, obj.script[os][sv].y, obj.script[os][sv].z);\r\n                                        }\r\n                                        if (obj.script[os][sv].type == 'THREE.Vector4') {\r\n                                            objmesh.script[os][sv] = new THREE.Vector4(obj.script[os][sv].x, obj.script[os][sv].y, obj.script[os][sv].z, obj.script[os][sv].w);\r\n                                        }\r\n                                        if (obj.script[os][sv].type == 'THREE.Quaternion') {\r\n                                            objmesh.script[os][sv] = new THREE.Quaternion(obj.script[os][sv].x, obj.script[os][sv].y, obj.script[os][sv].z, obj.script[os][sv].w);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                //console.log('Script object:'+os);\r\n                                //console.log('VAR OTHER:'+sv);\r\n                                //console.log(typeof obj.script[os][sv]);\r\n                                //console.log(obj.script[os][sv]);\r\n                                //console.log(objmesh.script[os]);\r\n                                //console.log('VAR OTHER:'+sv);\r\n                                objmesh.script[os][sv] = obj.script[os][sv]; //copy variable\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (objmesh != null) {\r\n            //console.log(obj.position);\r\n            //console.log(parseFloat(obj.position.x),parseFloat(obj.position.y),parseFloat(obj.position.z));\r\n            objmesh.position.set(parseFloat(obj.position.x), parseFloat(obj.position.y), parseFloat(obj.position.z));\r\n            //console.log(obj.rotation);\r\n            objmesh.rotation.x = parseFloat(obj.rotation._x);\r\n            objmesh.rotation.y = parseFloat(obj.rotation._y);\r\n            objmesh.rotation.z = parseFloat(obj.rotation._z);\r\n            objmesh.scale.set(parseFloat(obj.scale.x), parseFloat(obj.scale.y), parseFloat(obj.scale.z));\r\n            //objmesh.rotation = obj.rotation;\r\n            //objmesh.scale = obj.scale;\r\n            tmpobj = objmesh;\r\n        }\r\n        if (tmpobj != null) {\r\n            /*\r\n            if(this.selectobject != null){\r\n                this.selectobject.add(tmpobj); //attach to current selected\r\n            }else{\r\n                this.scene.add(tmpobj);\r\n            }\r\n            */\r\n            this.parentObj(tmpobj, obj.parent);\r\n            //console.log(tmpobj);\r\n            this.scenenodes.push(tmpobj);\r\n            //NodeSelectObject({object:tmpobj});\r\n            var tmpmap = this.copyobjectprops(objmesh);\r\n            //console.log(\"obj\");\r\n            //console.log(obj);\r\n            //console.log(\"tmpmap\");\r\n            //console.log(tmpmap);\r\n            this.mapscenenodes.push(tmpmap);\r\n\t\t\t//console.log(tmpobj);\r\n            tmpobj = null;\r\n            geometry = null;\r\n            objmesh = null;\r\n            edges = null;\r\n            material = null;\r\n        }\r\n    }\r\n\r\n\tupdateGroupGeometry(mesh, geometry) {\r\n        mesh.geometry.dispose();\r\n        mesh.geometry = geometry;\r\n    }\r\n\r\n\tSetParamGeom(mesh) {\r\n        if (mesh.geometry.type == \"BoxGeometry\") {\r\n            this.updateGroupGeometry(mesh, new THREE.BoxGeometry(mesh.geometry.parameters.width, mesh.geometry.parameters.height, mesh.geometry.parameters.depth, mesh.geometry.parameters.widthSegments, mesh.geometry.parameters.heightSegments, mesh.geometry.parameters.depthSegments));\r\n        }\r\n        if (mesh.geometry.type == \"CircleGeometry\") {\r\n            this.updateGroupGeometry(mesh, new THREE.CircleGeometry(mesh.geometry.parameters.radius, mesh.geometry.parameters.segments, mesh.geometry.parameters.thetaStart, mesh.geometry.parameters.thetaLength));\r\n        }\r\n        if (mesh.geometry.type == \"CylinderGeometry\") {\r\n            this.updateGroupGeometry(mesh, new THREE.CylinderGeometry(mesh.geometry.parameters.radiusTop, mesh.geometry.parameters.radiusBottom, mesh.geometry.parameters.height, mesh.geometry.parameters.radiusSegments, mesh.geometry.parameters.heightSegments, mesh.geometry.parameters.openEnded, mesh.geometry.parameters.thetaStart, mesh.geometry.parameters.thetaLength));\r\n        }\r\n        if (mesh.geometry.type == \"PlaneGeometry\") {\r\n            this.updateGroupGeometry(mesh, new THREE.PlaneGeometry(mesh.geometry.parameters.width, mesh.geometry.parameters.height, mesh.geometry.parameters.widthSegments, mesh.geometry.parameters.heightSegments));\r\n        }\r\n        if (mesh.geometry.type == \"SphereGeometry\") {\r\n            this.updateGroupGeometry(mesh, new THREE.SphereGeometry(mesh.geometry.parameters.radius, mesh.geometry.parameters.widthSegments, mesh.geometry.parameters.heightSegments, mesh.geometry.parameters.phiStart, mesh.geometry.parameters.phiLength, mesh.geometry.parameters.thetaStart, mesh.geometry.parameters.thetaLength));\r\n        }\r\n        if (mesh.geometry.type == \"DodecahedronGeometry\") {\r\n            this.updateGroupGeometry(mesh, new THREE.DodecahedronGeometry(mesh.geometry.parameters.radius, mesh.geometry.parameters.detail));\r\n        }\r\n        if (mesh.geometry.type == \"IcosahedronGeometry\") {\r\n            this.updateGroupGeometry(mesh, new THREE.IcosahedronGeometry(mesh.geometry.parameters.radius, mesh.geometry.parameters.detail));\r\n        }\r\n        if (mesh.geometry.type == \"OctahedronGeometry\") {\r\n            this.updateGroupGeometry(mesh, new THREE.OctahedronGeometry(mesh.geometry.parameters.radius, mesh.geometry.parameters.detail));\r\n        }\r\n        if (mesh.geometry.type == \"RingGeometry\") {\r\n            this.updateGroupGeometry(mesh, new THREE.RingGeometry(mesh.geometry.parameters.innerRadius, mesh.geometry.parameters.outerRadius, mesh.geometry.parameters.thetaSegments, mesh.geometry.parameters.phiSegments, mesh.geometry.parameters.thetaStart, mesh.geometry.parameters.thetaLength));\r\n        }\r\n        if (mesh.geometry.type == \"TetrahedronGeometry\") {\r\n            this.updateGroupGeometry(mesh, new THREE.TetrahedronGeometry(mesh.geometry.parameters.radius, mesh.geometry.parameters.detail));\r\n        }\r\n        if (mesh.geometry.type == \"TorusGeometry\") {\r\n            this.updateGroupGeometry(mesh, new THREE.TorusGeometry(mesh.geometry.parameters.radius, mesh.geometry.parameters.tube, mesh.geometry.parameters.radialSegments, mesh.geometry.parameters.tubularSegments, mesh.geometry.parameters.arc));\r\n        }\r\n        if (mesh.geometry.type == \"TorusKnotGeometry\") {\r\n            this.updateGroupGeometry(mesh, new THREE.TorusKnotGeometry(mesh.geometry.parameters.radius, mesh.geometry.parameters.tube, mesh.geometry.parameters.radialSegments, mesh.geometry.parameters.tubularSegments, mesh.geometry.parameters.p, mesh.geometry.parameters.q, mesh.geometry.parameters.heightScale));\r\n        }\r\n    }\r\n\r\n\tcopyobjectprops(obj) {\r\n        //console.log('//  = processing ');\r\n        var o3d = new object3d();\r\n        o3d.uuid = obj.uuid;\r\n        o3d.name = obj.name;\r\n        o3d.type = obj.type;\r\n        if (obj.parent != null) {\r\n            o3d.parent = obj.parent.uuid;\r\n        }\r\n        else {\r\n            o3d.parent = null;\r\n        }\r\n        if (obj.bdisplay != null) {\r\n            o3d.bdisplay = obj.bdisplay;\r\n        }\r\n        if (obj.type == \"CubeCamera\") {\r\n            o3d.near = obj.near;\r\n            o3d.far = obj.far;\r\n            o3d.cubeResolution = obj.cubeResolution;\r\n        }\r\n        if (obj.type == \"PerspectiveCamera\") {\r\n            o3d.fov = obj.fov;\r\n            o3d.aspect = obj.aspect;\r\n            o3d.near = obj.near;\r\n            o3d.far = obj.far;\r\n        }\r\n        if (obj.type == \"OrthographicCamera\") {\r\n            o3d.left = obj.left;\r\n            o3d.right = obj.right;\r\n            o3d.top = obj.top;\r\n            o3d.bottom = obj.bottom;\r\n            o3d.near = obj.near;\r\n            o3d.far = obj.far;\r\n        }\r\n        if (obj.type == \"AmbientLight\") {\r\n            o3d.color = obj.color;\r\n            o3d.intensity = obj.intensity;\r\n        }\r\n        if (obj.type == \"DirectionalLight\") {\r\n            o3d.color = obj.color;\r\n            o3d.intensity = obj.intensity;\r\n        }\r\n        if (obj.type == \"HemisphereLight\") {\r\n            o3d.skyColor = obj.color;\r\n            //console.log(obj.color);\r\n            o3d.groundColor = obj.groundColor;\r\n            o3d.intensity = obj.intensity;\r\n        }\r\n        if (obj.type == \"Light\") {\r\n            o3d.skyColor = obj.color;\r\n            o3d.intensity = obj.intensity;\r\n        }\r\n        if (obj.type == \"PointLight\") {\r\n            o3d.color = obj.color;\r\n            o3d.intensity = obj.intensity;\r\n            o3d.distance = obj.distance;\r\n            o3d.decay = obj.decay;\r\n        }\r\n        if (obj.type == \"SpotLight\") {\r\n            o3d.color = obj.color;\r\n            o3d.intensity = obj.intensity;\r\n            o3d.distance = obj.distance;\r\n            o3d.angle = obj.angle;\r\n            o3d.penumbra = obj.penumbra;\r\n            o3d.decay = obj.decay;\r\n        }\r\n        o3d.children = [];\r\n        if (obj.geometry != null) {\r\n            o3d.geometrytype = obj.geometry.type;\r\n            if (obj.geometry.parameters != null) {\r\n                o3d.parameters = obj.geometry.parameters;\r\n            }\r\n        }\r\n        if (obj.script != null) {\r\n            /*\r\n            var is_array = function (value) {\r\n                return value &&\r\n                typeof value === 'object' &&\r\n                typeof value.length === 'number' &&\r\n                typeof value.splice === 'function' &&\r\n                !(value.propertyIsEnumerable('length'));\r\n            };\r\n            */\r\n            o3d.script = {}; //create script object\r\n            for (var os in obj.script) {\r\n                o3d.script[os] = {}; //create object\r\n                for (var param in obj.script[os]) {\r\n                    //console.log(typeof obj.script[os][param]);\r\n                    //console.log(obj.script[os][param]);\r\n                    if ((typeof obj.script[os][param] == 'object')) {\r\n                        if (param != 'entity') {\r\n                            //console.log('checking object type?');\r\n                            //console.log('obj.script.'+os+'.'+''+param);\r\n                            if (obj.script[os][param] instanceof THREE.Object3D) {\r\n                                if (obj.script[os][param].type == 'Object3D') {\r\n                                    //console.log(obj.script[os][param]);\r\n                                    //console.log('found Object3D!');\r\n                                    //o3d.script[os][param] = obj.script[os][param]; // error on geometry uuid if not set\r\n                                    o3d.script[os][param] = { type: 'Object3D', uuid: obj.script[os][param].uuid };\r\n                                }\r\n                            }\r\n                            if (obj.script[os][param] instanceof THREE.Mesh) {\r\n                                console.log(obj.script[os][param]);\r\n                                console.log('found Mesh!');\r\n                                //o3d.script[os][param] = obj.script[os][param]; // error on geometry uuid if not set\r\n                                o3d.script[os][param] = { type: 'Mesh', uuid: obj.script[os][param].uuid };\r\n                            }\r\n                            if (Object.prototype.toString.call(obj.script[os][param]) === '[object Array]') {\r\n                                console.log(obj.script[os][param]);\r\n                                //console.log('found object Array!');\r\n                                o3d.script[os][param] = obj.script[os][param];\r\n                            }\r\n                            if (obj.script[os][param] instanceof THREE.Vector2) {\r\n                                //console.log(obj.script[os][param]);\r\n                                //console.log('found THREE.Vector2!');\r\n                                o3d.script[os][param] = obj.script[os][param];\r\n                                o3d.script[os][param] = { type: 'THREE.Vector2', x: obj.script[os][param].x, y: obj.script[os][param].y };\r\n                            }\r\n                            if (obj.script[os][param] instanceof THREE.Vector3) {\r\n                                //console.log(obj.script[os][param]);\r\n                                //console.log('found THREE.Vector3!');\r\n                                //o3d.script[os][param] = obj.script[os][param];\r\n                                o3d.script[os][param] = { type: 'THREE.Vector3', x: obj.script[os][param].x, y: obj.script[os][param].y, z: obj.script[os][param].z };\r\n                            }\r\n                            if (obj.script[os][param] instanceof THREE.Vector4) {\r\n                                //console.log(obj.script[os][param]);\r\n                                //console.log('found THREE.Vector4!');\r\n                                //o3d.script[os][param] = obj.script[os][param];\r\n                                o3d.script[os][param] = { type: 'THREE.Vector4', x: obj.script[os][param].x, y: obj.script[os][param].y, z: obj.script[os][param].z, w: obj.script[os][param].w };\r\n                            }\r\n                            if (obj.script[os][param] instanceof THREE.Quaternion) {\r\n                                //console.log(obj.script[os][param]);\r\n                                //console.log('found THREE.Quaternion!');\r\n                                //o3d.script[os][param] = obj.script[os][param];\r\n                                o3d.script[os][param] = { type: 'THREE.Quaternion', x: obj.script[os][param].x, y: obj.script[os][param].y, z: obj.script[os][param].z, w: obj.script[os][param].w };\r\n                            }\r\n                        }\r\n                    }\r\n                    if ((typeof obj.script[os][param] == 'string')) {\r\n                        o3d.script[os][param] = obj.script[os][param]; //assign var\r\n                    }\r\n                    if ((typeof obj.script[os][param] == 'string')) {\r\n                        o3d.script[os][param] = obj.script[os][param]; //assign var\r\n                    }\r\n                    if ((typeof obj.script[os][param] == 'boolean')) {\r\n                        o3d.script[os][param] = obj.script[os][param]; //assign var\r\n                    }\r\n                    if ((typeof obj.script[os][param] == 'number')) {\r\n                        o3d.script[os][param] = obj.script[os][param]; //assign var\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        o3d.position = obj.position;\r\n        o3d.rotation = obj.rotation;\r\n        o3d.scale = obj.scale;\r\n        return o3d;\r\n    }\r\n\r\n\tcreateshape(args) {\r\n        if (args != null) {\r\n            if (args['shape'] != null) {\r\n                var tmpobj;\r\n                var geometry;\r\n                var objmesh;\r\n                var edges;\r\n                var material;\r\n                var tmpmap;\r\n                if (args['shape'] == 'Scene') {\r\n                    objmesh = new THREE.Scene();\r\n                    objmesh.name = \"Scene\";\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'Sprite') {\r\n                    //var map = new THREE.Textureer().( \"sprite.png\" );\r\n                    //var material = new THREE.SpriteMaterial( { map: map, color: 0xffffff, fog: true } );\r\n                    material = new THREE.SpriteMaterial({ color: 0xffffff, fog: true });\r\n                    objmesh = new THREE.Sprite(material);\r\n                    objmesh.name = 'Sprite';\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'Object3D') {\r\n                    //console.log('object 3d??');\r\n                    objmesh = new THREE.Object3D();\r\n                    objmesh.name = 'Object3D';\r\n                    //console.log(objmesh);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'BoxGeometry') {\r\n                    geometry = new THREE.BoxGeometry(1, 1, 1, 1, 1, 1);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n                    objmesh = new THREE.Mesh(geometry, material);\r\n                    objmesh.name = \"BoxGeometry\";\r\n                    console.log(objmesh);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'CircleGeometry') {\r\n                    geometry = new THREE.CircleGeometry(2, 8, 0, 2 * Math.PI);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xffff00, side: THREE.DoubleSide });\r\n                    objmesh = new THREE.Mesh(geometry, material);\r\n                    objmesh.name = \"CircleGeometry\";\r\n                    console.log(objmesh.geometry.parameters);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'CylinderGeometry') {\r\n                    geometry = new THREE.CylinderGeometry(5, 5, 10, 8, 1, false, 0, 2 * Math.PI);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xffff00 });\r\n                    objmesh = new THREE.Mesh(geometry, material);\r\n                    objmesh.name = \"CylinderGeometry\";\r\n                    console.log(objmesh.geometry.parameters);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'PlaneGeometry') {\r\n                    geometry = new THREE.PlaneGeometry(10, 10, 1, 1);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xffff00, side: THREE.DoubleSide });\r\n                    objmesh = new THREE.Mesh(geometry, material);\r\n                    objmesh.name = \"PlaneGeometry\";\r\n                    console.log(objmesh.geometry.parameters);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'SphereGeometry') {\r\n                    geometry = new THREE.SphereGeometry(5, 32, 32, 0, 2 * Math.PI, 0, 2 * Math.PI);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xffff00 });\r\n                    objmesh = new THREE.Mesh(geometry, material);\r\n                    objmesh.name = \"SphereGeometry\";\r\n                    console.log(objmesh.geometry.parameters);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'DodecahedronGeometry') {\r\n                    geometry = new THREE.DodecahedronGeometry(1, 0);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xffff00 });\r\n                    objmesh = new THREE.Mesh(geometry, material);\r\n                    objmesh.name = \"DodecahedronGeometry\";\r\n                    console.log(objmesh.geometry.parameters);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'IcosahedronGeometry') {\r\n                    geometry = new THREE.IcosahedronGeometry(1, 0);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xffff00 });\r\n                    objmesh = new THREE.Mesh(geometry, material);\r\n                    objmesh.name = \"IcosahedronGeometry\";\r\n                    console.log(objmesh.geometry.parameters);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'OctahedronGeometry') {\r\n                    geometry = new THREE.OctahedronGeometry(1, 0);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xffff00 });\r\n                    objmesh = new THREE.Mesh(geometry, material);\r\n                    objmesh.name = \"OctahedronGeometry\";\r\n                    console.log(objmesh.geometry.parameters);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'RingGeometry') {\r\n                    geometry = new THREE.RingGeometry(1, 5, 8, 1, 0, 2 * Math.PI);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xffff00 });\r\n                    objmesh = new THREE.Mesh(geometry, material);\r\n                    objmesh.name = \"RingGeometry\";\r\n                    console.log(objmesh.geometry.parameters);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'TetrahedronGeometry') {\r\n                    geometry = new THREE.TetrahedronGeometry(1, 0);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xffff00 });\r\n                    objmesh = new THREE.Mesh(geometry, material);\r\n                    objmesh.name = \"TetrahedronGeometry\";\r\n                    console.log(objmesh.geometry.parameters);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'TorusGeometry') {\r\n                    geometry = new THREE.TorusGeometry(10, 3, 16, 100, 2 * Math.PI);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xffff00 });\r\n                    objmesh = new THREE.Mesh(geometry, material);\r\n                    objmesh.name = \"TorusGeometry\";\r\n                    console.log(objmesh.geometry.parameters);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'TorusKnotGeometry') {\r\n                    geometry = new THREE.TorusKnotGeometry(10, 3, 100, 16, 2, 3, 1);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xffff00 });\r\n                    objmesh = new THREE.Mesh(geometry, material);\r\n                    objmesh.name = \"TorusKnotGeometry\";\r\n                    console.log(objmesh.geometry.parameters);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'TextGeometry') {\r\n                    geometry = new THREE.TextGeometry('Text', {});\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xffff00 });\r\n                    objmesh = new THREE.Mesh(geometry, material);\r\n                    objmesh.name = \"TextGeometry\";\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'ArrowHelper') {\r\n                    var dir = new THREE.Vector3(1, 0, 0);\r\n                    var origin = new THREE.Vector3(0, 0, 0);\r\n                    var length = 1;\r\n                    var hex = 0xffff00;\r\n                    var arrowHelper = new THREE.ArrowHelper(dir, origin, length, hex);\r\n                    tmpobj = arrowHelper;\r\n                }\r\n                if (args['shape'] == 'AxisHelper') {\r\n                    var axisHelper = new THREE.AxisHelper(5);\r\n                    tmpobj = axisHelper;\r\n                }\r\n                if (args['shape'] == 'BoundingBoxHelper') {\r\n                    objmesh = new THREE.Object3D();\r\n                    var hex = 0xff0000;\r\n                    var sphereMaterial = new THREE.MeshLambertMaterial({ color: 0x00ff00 });\r\n                    var sphere = new THREE.Mesh(new THREE.SphereGeometry(30, 12, 12), sphereMaterial);\r\n                    objmesh.add(sphere);\r\n                    var bbox = new THREE.BoundingBoxHelper(sphere, hex);\r\n                    bbox.update();\r\n                    objmesh.add(bbox);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'EdgesHelper') {\r\n                    objmesh = new THREE.Object3D();\r\n                    geometry = new THREE.BoxGeometry(10, 10, 10, 2, 2, 2);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\r\n                    var object = new THREE.Mesh(geometry, material);\r\n                    edges = new THREE.EdgesHelper(object, 0x00ff00);\r\n                    objmesh.add(object);\r\n                    objmesh.add(edges);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'FaceNormalsHelper') {\r\n                    objmesh = new THREE.Object3D();\r\n                    geometry = new THREE.BoxGeometry(10, 10, 10, 2, 2, 2);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\r\n                    var object = new THREE.Mesh(geometry, material);\r\n                    edges = new THREE.FaceNormalsHelper(object, 2, 0x00ff00, 1);\r\n                    objmesh.add(object);\r\n                    objmesh.add(edges);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'GridHelper') {\r\n                    var size = 10;\r\n                    var step = 1;\r\n                    var gridHelper = new THREE.GridHelper(size, step);\r\n                    tmpobj = gridHelper;\r\n                }\r\n                if (args['shape'] == 'PointLightHelper') {\r\n                    objmesh = new THREE.Object3D();\r\n                    var pointLight = new THREE.PointLight(0xff0000, 1, 100);\r\n                    pointLight.position.set(10, 10, 10);\r\n                    objmesh.add(pointLight);\r\n                    var sphereSize = 1;\r\n                    var pointLightHelper = new THREE.PointLightHelper(pointLight, sphereSize);\r\n                    objmesh.add(pointLightHelper);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'SpotLightHelper') {\r\n                    objmesh = new THREE.Object3D();\r\n                    var spotLight = new THREE.SpotLight(0xffffff);\r\n                    spotLight.position.set(10, 10, 10);\r\n                    objmesh.add(spotLight);\r\n                    var spotLightHelper = new THREE.SpotLightHelper(spotLight);\r\n                    objmesh.add(spotLightHelper);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'VertexNormalsHelper') {\r\n                    objmesh = new THREE.Object3D();\r\n                    geometry = new THREE.BoxGeometry(10, 10, 10, 2, 2, 2);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\r\n                    var object = new THREE.Mesh(geometry, material);\r\n                    edges = new THREE.VertexNormalsHelper(object, 2, 0x00ff00, 1);\r\n                    objmesh.add(object);\r\n                    objmesh.add(edges);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (args['shape'] == 'WireframeHelper') {\r\n                    objmesh = new THREE.Object3D();\r\n                    geometry = new THREE.BoxGeometry(10, 10, 10, 2, 2, 2);\r\n                    material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\r\n                    var object = new THREE.Mesh(geometry, material);\r\n                    var wireframe = new THREE.WireframeHelper(object, 0x00ff00);\r\n                    objmesh.add(object);\r\n                    objmesh.add(wireframe);\r\n                    tmpobj = objmesh;\r\n                }\r\n                if (tmpobj != null) {\r\n                    if (this.selectobject != null) {\r\n                        this.selectobject.add(tmpobj); //attach to current selected\r\n                    }\r\n                    else {\r\n                        this.scene.add(tmpobj);\r\n                    }\r\n                    this.scenenodes.push(tmpobj);\r\n                    console.log('create object?');\r\n                    console.log(tmpobj);\r\n                    NodeSelectObject({ object: tmpobj });\r\n                    tmpmap = this.copyobjectprops(objmesh);\r\n                    //console.log(tmpmap);\r\n                    this.mapscenenodes.push(tmpmap);\r\n                    //var test3d = new object3d();\r\n                    //console.log(test3d);\r\n                    tmpobj = null;\r\n                    geometry = null;\r\n                    objmesh = null;\r\n                    edges = null;\r\n                    material = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_framework_module} from './threejs_framework_module';\r\n\r\nexport class Threejs_framework_gundb extends Threejs_framework_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_framework_module} from './threejs_framework_module';\r\n\r\nexport class Threejs_framework_hud extends Threejs_framework_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n\r\n    //works mesh over lap scenes\r\n\tsetup_hud(){\r\n        console.log(\"setup_hud\");\r\n\t\tthis.scenehud = new THREE.Scene();\r\n\t\t//this.cameraHUD = new THREE.OrthographicCamera(-width / 2, width / 2, height / 2, -height / 2, 0, 30);\r\n\t\t//this.camerahud = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\r\n\t\tthis.camerahud = new THREE.OrthographicCamera(-window.innerWidth / 2, window.innerWidth / 2, window.innerHeight / 2, -window.innerHeight / 2, 0, 30);\r\n\t\t//this.camerahud.position.z = 5;\r\n\t\t//var geometry = new THREE.BoxGeometry( 1, 1, 1 );\r\n        //var material = new THREE.MeshBasicMaterial( { color: 0xccccff } );\r\n        //var cube = new THREE.Mesh( geometry, material );\r\n        //cube.position.x = 1;\r\n\t\t//this.scenehud.add( cube );\r\n\t}\r\n\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_framework_module} from './threejs_framework_module';\r\n\r\nexport class Threejs_framework_loader extends Threejs_framework_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n\r\n    addListener(event, obj, fn) {\r\n        if (obj.addEventListener) {\r\n            obj.addEventListener(event, fn, false); // modern browsers\r\n        }\r\n        else {\r\n            obj.attachEvent(\"on\" + event, fn); // older versions of IE\r\n        }\r\n    }\r\n\r\n    loadjavascript(url, callback){\r\n\t    var script = document.createElement(\"script\");\r\n\t    script.type = \"text/javascript\";\r\n\t    if (script.readyState){  //IE\r\n\t        script.onreadystatechange = function(){\r\n\t            if (script.readyState == \"loaded\" || script.readyState == \"complete\"){\r\n\t                script.onreadystatechange = null;\r\n\t                callback();\r\n\t            }\r\n\t        };\r\n\t    } else {  //Others\r\n\t        script.onload = function(){\r\n\t            callback();\r\n\t        };\r\n\t    }\r\n        //console.log(this.jspath + url);\r\n\t    script.src = this.jspath + url;\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\r\n\t}\r\n\r\n    loadlibraries(){\r\n        console.log(\"loadlibraries...\");\r\n        var self = this;\r\n\t\tvar scriptcount = 0;\r\n\t\tvar scriptlist = this.scriptlist;\r\n\r\n\t\tfor(var i = 0; i < scriptlist.length;i++){\r\n\t\t\t//threejsapi.addScript(mappdata.scripts[i]);\r\n            console.log(scriptlist[i]);\r\n\t\t\tthis.loadjavascript(scriptlist[i], function(){\r\n\t\t\t\t//initialization code\r\n\t\t\t\tscriptcount++;\r\n\t\t\t\t//console.log(\"script: \"+scriptcount + \":\" + (scriptlist.length));\r\n\t\t\t\tif(scriptcount == scriptlist.length){ //make sure the scripts are load else it can't used script components\r\n\t\t\t\t\tconsole.log(\"script: \"+scriptcount + \":\" + (scriptlist.length));\r\n\t\t\t\t\tconsole.log('Finish load javascript libs!');\r\n\t\t\t\t\tself.init();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n    load(){\r\n\t\tconsole.log(\"loading map file!\");\r\n\t\tvar self = this;\r\n\t\tvar mappdata = self.mappdata;\r\n\t\tvar scriptcount = self.scriptcount;\r\n\t\t//this.mapurl\r\n\t\t//loader.load( 'post-app.json', function ( text ) {\r\n\t\tthis.loader.load( this.mapurl, function ( text ) {\r\n\t\t\tvar modelfiles = [];\r\n\t\t\tvar modelcount = 0;\r\n\r\n\t\t\tmappdata = JSON.parse( text );\r\n\t\t\tconsole.log(mappdata);\r\n\t\t\t//threejsapi = new CLASSGAME({onload:false,bcanvasRatio:true,bfixedassetpath:false});//config\r\n\t\t\t//threejsapi = new CLASSGAME(args);//config\r\n\t\t\tthreejsapi = self;\r\n\t\t\tscriptcount = 0;\r\n\r\n\t\t\tfunction loadmodelfiles(){\r\n\t\t\t\tconsole.log(\"init models loading files\");\r\n\t\t\t\tif(mappdata.assets !=null){\r\n\t\t\t\t\tconsole.log(\"Assets files: \"+ mappdata.assets.length);\r\n\t\t\t\t\t//if there no model files\r\n\t\t\t\t\tif(mappdata.assets.length == 0){\r\n\t\t\t\t\t\tloadscriptfiles();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor(var i = 0; i < mappdata.assets.length;i++){\r\n\t\t\t\t\t\tconsole.log(mappdata.assets[i]);\r\n\t\t\t\t\t\tif(mappdata.assets[i].type == \"model\"){\r\n\t\t\t\t\t\t\tmodelfiles.push(mappdata.assets[i]);\r\n\t\t\t\t\t\t\t//modelcount += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//console.log(\"model checking...\");\r\n\t\t\t\t\tfor(var mi = 0; mi < modelfiles.length;mi++){\r\n\t\t\t\t\t\t//console.log(modelfiles[mi].uuid);\r\n\t\t\t\t\t\tvar _id = modelfiles[mi].uuid;\r\n\t\t\t\t\t\tvar _name = modelfiles[mi].path;\r\n\t\t\t\t\t\t//console.log('//=========================');\r\n\t\t\t\t\t\t//console.log(modelfiles[mi].path);\r\n\t\t\t\t\t\tthreejsapi.LoadModelFile(modelfiles[mi],(object)=>{\r\n\t\t\t\t\t\t\tconsole.log('//========================================');\r\n\t\t\t\t\t\t\t//console.log(object.name);\r\n\t\t\t\t\t\t\t//object.name = _name;\r\n\t\t\t\t\t\t\t//console.log(object.uuid);\r\n\t\t\t\t\t\t\t//object.uuid = _id;\r\n\t\t\t\t\t\t\tconsole.log(object);\r\n\t\t\t\t\t\t\t//console.log(object.uuid);\r\n\t\t\t\t\t\t\tmodelcount++;\r\n\t\t\t\t\t\t\tconsole.log(\"models: \"+modelcount + \":\" +(modelfiles.length));\r\n\t\t\t\t\t\t\tif(modelcount == modelfiles.length){\r\n\t\t\t\t\t\t\t\t//console.log('Finish loading file models!');\r\n\t\t\t\t\t\t\t\t//console.log('init scripts!');\r\n\t\t\t\t\t\t\t\tloadscriptfiles();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//load scripts\r\n\t\t\tfunction loadscriptfiles(){\r\n\t\t\t\tif(mappdata.scripts !=null){\r\n\t\t\t\t\tconsole.log(\"init script loading files...\");\r\n\t\t\t\t\tconsole.log(\"Scripts files: \"+ mappdata.scripts.length);\r\n\t\t\t\t\tif(mappdata.scripts.length == 0){\r\n\t\t\t\t\t\tloadentities();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(var i = 0; i < mappdata.scripts.length;i++){\r\n\t\t\t\t\t\t//threejsapi.addScript(mappdata.scripts[i]);\r\n\t\t\t\t\t\tloadScript(mappdata.scripts[i], function(){\r\n\t\t\t    \t\t\t//initialization code\r\n\t\t\t\t\t\t\tscriptcount++;\r\n\t\t\t\t\t\t\t//console.log(\"script: \"+scriptcount + \":\" + (mappdata.scripts.length));\r\n\t\t\t\t\t\t\tif(scriptcount == mappdata.scripts.length){ //make sure the scripts are load else it can't used script components\r\n\t\t\t\t\t\t\t\t//console.log('Finish script components!');\r\n\t\t\t\t\t\t\t\t//console.log('init load entities!');\r\n\t\t\t\t\t\t\t\tloadentities();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//load entities\r\n\t\t\tfunction loadentities(){\r\n\t\t\t\tconsole.log('loading entities?');\r\n\t\t\t\tif(mappdata.entities !=null){\r\n\t\t\t\t\tconsole.log(\"Entities count:\"+ mappdata.entities.length);\r\n\t\t\t\t\tfor(var i = 0; i < mappdata.entities.length;i++){\r\n\t\t\t\t\t\tthreejsapi.parseObject(mappdata.entities[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log('Finish loading!');\r\n\r\n\t\t\t\t\t//self.hideloadingscreen();\r\n\r\n\t\t\t\t\t//self.loadScript(\"/assets/test1.js\", function(){\r\n\t\t\t\t\t\t//initialization code\r\n\t\t\t\t\t\t//console.log(\"test? js\");\r\n\t\t\t\t\t//});\r\n\t\t\t\t\t//console.log(threejsapi);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tloadmodelfiles();\r\n\t\t});\r\n\t}\r\n\r\n    //===============================================\r\n    // Manager\r\n    //===============================================\r\n\r\n    initManger() {\r\n\t\tthis.manager = new THREE.LoadingManager();\r\n\t\tthis.manager.onProgress = function (item, loaded, total) {\r\n\t\t\tconsole.log(item, loaded, total);\r\n\t\t};\r\n\t}\r\n\r\n\tonProgressModel(xhr) {\r\n        if (xhr.lengthComputable) {\r\n            var percentComplete = xhr.loaded / xhr.total * 100;\r\n        }\r\n    }\r\n\r\n\tonErrorModel(xhr) {\r\n        console.log(xhr);\r\n    }\r\n    //===============================================\r\n    // Load File\r\n    //===============================================\r\n    getext(filename) {\r\n\t\treturn filename.substr(filename.lastIndexOf('.'));\r\n\t}\r\n\r\n    LoadFile(filename) {\r\n        console.log('file: ' + filename);\r\n        var self = this;\r\n        if (this.getext(filename) == '.fbx') {\r\n            this.LoadFBX(filename, function (object) {\r\n                self.scene.add(object);\r\n            });\r\n        }\r\n        if (this.getext(filename) == '.dae') {\r\n            this.LoadDAE(filename, function (object) {\r\n                self.scene.add(object);\r\n            });\r\n        }\r\n        if (this.getext(filename) == '.obj') {\r\n            this.LoadOBJ(filename, function (object) {\r\n                self.scene.add(object);\r\n            });\r\n        }\r\n        if (this.getext(filename) == '.js') {\r\n            this.LoadJSONObj(filename, function (object) {\r\n                self.scene.add(object);\r\n            });\r\n        }\r\n        if (this.getext(filename) == '.json') {\r\n            this.LoadJSONObj(filename, function (object) {\r\n                self.scene.add(object);\r\n            });\r\n        }\r\n    }\r\n\r\n\tLoadModelFile(args, callback) {\r\n        console.log('file: ' + args.path);\r\n        var self = this;\r\n        if (this.getext(args.path) == '.fbx') {\r\n            this.LoadFBX(args.path, function (object) {\r\n                //self.scene.add(object);\r\n                object.uuid = args.uuid;\r\n                callback(object);\r\n            });\r\n        }\r\n        if (this.getext(args.path) == '.dae') {\r\n            this.LoadDAE(args.path, function (object) {\r\n                //self.scene.add(object);\r\n                object.uuid = args.uuid;\r\n                callback(object);\r\n            });\r\n        }\r\n        if (this.getext(args.path) == '.obj') {\r\n            this.LoadOBJ(args.path, function (object) {\r\n                //self.scene.add(object);\r\n                //console.log(\"done object loading????\");\r\n                object.uuid = args.uuid;\r\n                callback(object);\r\n            });\r\n        }\r\n        if (this.getext(args.path) == '.js') {\r\n            this.LoadJSONObj(args.path, function (object) {\r\n                //self.scene.add( object );\r\n                object.uuid = args.uuid;\r\n                callback(object);\r\n            });\r\n        }\r\n        if (this.getext(args.path) == '.json') {\r\n            this.LoadJSONObj(args.path, function (object) {\r\n                //self.scene.add( object );\r\n                object.uuid = args.uuid;\r\n                callback(object);\r\n            });\r\n        }\r\n    }\r\n\r\n\tLoadJSONObj(filename, callback) {\r\n        var filepath;\r\n        if (this.bfixedassetpath) {\r\n            filepath = \"/assets/\" + filename;\r\n        }\r\n        else {\r\n            filename;\r\n            filepath = filename;\r\n        }\r\n        var loader = new THREE.JSONLoader();\r\n        var name = filename;\r\n        var self = this;\r\n        var name = filename;\r\n        loader.load(filepath, function (geometry, materials) {\r\n            var material = materials[0];\r\n            material.morphTargets = true;\r\n            material.color.setHex(0xffaaaa);\r\n            var faceMaterial = new THREE.MultiMaterial(materials);\r\n            var mesh = new THREE.Mesh(geometry, faceMaterial);\r\n            mesh.name = name;\r\n            callback(mesh);\r\n            //self.scene.add( mesh );\r\n            name = null;\r\n            loader = null;\r\n        }, this.onProgressModel, this.onErrorModel);\r\n    }\r\n\r\n\tLoadFBX(filename, callback) {\r\n        var filepath;\r\n        if (this.bfixedassetpath) {\r\n            filepath = \"/assets/\" + filename;\r\n        }\r\n        else {\r\n            filename;\r\n            filepath = filename;\r\n        }\r\n        var name = filename;\r\n        //console.log(filepath);\r\n        var loader = new THREE.FBXLoader(this.manager);\r\n        var self = this;\r\n        loader.load(filepath, function (object) {\r\n            object.traverse(function (child) {\r\n                if (child instanceof THREE.Mesh) {\r\n                }\r\n                if (child instanceof THREE.SkinnedMesh) {\r\n                    if (child.geometry.animations !== undefined || child.geometry.morphAnimations !== undefined) {\r\n                        child.mixer = new THREE.AnimationMixer(child);\r\n                        //mixers.push( child.mixer );\r\n                        var action = child.mixer.clipAction(child.geometry.animations[0]);\r\n                        action.play();\r\n                    }\r\n                }\r\n            });\r\n            //self.scene.add( object );\r\n            object.name = filename;\r\n            //console.log(\"///////////////////////////////\");\r\n            //console.log(object.name);\r\n            callback(object);\r\n            name = null;\r\n            loader = null;\r\n        }, this.onProgressModel, this.onErrorModel);\r\n    }\r\n\r\n\tLoadDAE(filename, callback) {\r\n        var filepath;\r\n        if (this.bfixedassetpath) {\r\n            filepath = \"/assets/\" + filename;\r\n        }\r\n        else {\r\n            filename;\r\n            filepath = filename;\r\n        }\r\n        var loader = new THREE.ColladaLoader(this.manager);\r\n        var self = this;\r\n        loader.options.convertUpAxis = true;\r\n        loader.load(filepath, function (collada) {\r\n            var dae = collada.scene;\r\n            dae.traverse(function (child) {\r\n                if (child instanceof THREE.SkinnedMesh) {\r\n                    var animation = new THREE.Animation(child, child.geometry.animation);\r\n                    animation.play();\r\n                }\r\n            });\r\n            //dae.scale.x = dae.scale.y = dae.scale.z = 0.002;\r\n            dae.updateMatrix();\r\n            //init();\r\n            //animate();\r\n            //self.scene.add( dae );\r\n            dae.name = filepath;\r\n            callback(dae);\r\n            console.log(\"added\");\r\n            //name = null;\r\n            loader = null;\r\n        }, this.onProgressModel, this.onErrorModel);\r\n    }\r\n\r\n\tLoadOBJ(filename, callback) {\r\n        var self = this;\r\n        //var name = filename;\r\n        var filepath;\r\n        if (this.bfixedassetpath) {\r\n            filepath = \"/assets/\" + filename;\r\n        }\r\n        else {\r\n            filename;\r\n            filepath = filename;\r\n        }\r\n        var loader = new THREE.OBJLoader(this.manager);\r\n        //var loader = new THREE.OBJLoader();\r\n        loader.load(filepath, function (object) {\r\n            object.traverse(function (child) {\r\n                if (child instanceof THREE.Mesh) {\r\n                }\r\n            });\r\n            //object.position.y = - 95;\r\n            //self.scene.add( object );\r\n            object.name = filename;\r\n            callback(object);\r\n            //name = null;\r\n            loader = null;\r\n        }, this.onProgressModel, this.onErrorModel);\r\n    }\r\n\r\n\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_framework_module} from './threejs_framework_module';\r\n\r\nexport class Threejs_framework_loadingscreen extends Threejs_framework_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n\r\n    initloadingscreen(){\r\n\t\tvar styleloadingscreen = document.createElement(\"style\");\r\n\t\tstyleloadingscreen.innerHTML = '';\r\n\t\tstyleloadingscreen.innerHTML += '.loader {border: 16px solid #f3f3f3;border-top: 16px solid #3498db;border-radius: 50%;width: 120px;height: 120px;animation: spin 2s linear infinite;}';\r\n\t\tstyleloadingscreen.innerHTML += '\\n@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg);}}';\r\n\t\tstyleloadingscreen.type = 'text/css';\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(styleloadingscreen);\r\n\r\n\t\tvar divloadingscreen = document.createElement(\"div\");\r\n\t\tdivloadingscreen.id = \"loadingscreen\";\r\n\t\tdivloadingscreen.style['background-color'] = '#dddddd';\r\n\t\tdivloadingscreen.style.position = 'absolute';\r\n\t\tdivloadingscreen.style.top = 0;\r\n\t\tdivloadingscreen.style.left = 0;\r\n\t\tdivloadingscreen.style.width = '100%';\r\n\t\tdivloadingscreen.style.height = '100%';\r\n\t\tdivloadingscreen.innerHTML = \"<div style='background-color: #dddddd;position: absolute;left: 0;height: 50%;width: 100%;top: 50%;'><center><div class='loader'></div></center> <center id='loadingscreentext'>Loading...</center></div>\"\r\n\t\tdocument.getElementsByTagName('body')[0].appendChild(divloadingscreen);\r\n\t}\r\n\r\n\tloadingscreentext(_TEXT=\"loading......\"){\r\n\t\tdocument.getElementById('loadingscreentext').innerHTML = _TEXT;\r\n\t}\r\n\r\n\tshowloadingscreen(){\r\n\t\tdocument.getElementById('loadingscreen').style.display = 'block';\r\n\t}\r\n\r\n\thideloadingscreen(){\r\n\t\tdocument.getElementById('loadingscreen').style.display = 'none';\r\n\t}\r\n\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\n\r\nexport class Threejs_framework_module{\r\n\r\n    constructor(args){\r\n        if(!args){\r\n            args = {};\r\n            console.log(\"no args...\");\r\n        }\r\n        var propertyNames = Object.getOwnPropertyNames(Object.getPrototypeOf(this));\r\n        for(var fun in propertyNames){\r\n            //console.log(fun);\r\n            //console.log(propertyNames[fun]);\r\n            if(propertyNames[fun] != \"constructor\"){\r\n                args[propertyNames[fun]] = this[propertyNames[fun]];\r\n            }else{\r\n                //console.log('ignore ' + propertyNames[fun] );\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_framework_module} from './threejs_framework_module';\r\n\r\nexport class Threejs_framework_network extends Threejs_framework_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n\r\n    setup_network(){\r\n\t\tvar self = this;\r\n\t\tthis.socket = io();\r\n\t\tthis.socket.on('connect', function () {\r\n\t\t    console.log('server connected');\r\n\t\t\tif(this.reload){\r\n\t\t\t\tlocation.reload();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.socket.on('disconnect', function () {\r\n\t\t    console.log('server disconnected');\r\n\t\t\tthis.reload = true;\r\n\t\t});\r\n\t}\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_framework_module} from './threejs_framework_module';\r\n\r\nexport class Threejs_framework_physics extends Threejs_framework_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n    initCannonPhysics() {\r\n\t\tif (typeof CANNON != undefined) {\r\n\t\t\tthis.world = new CANNON.World();\r\n\t\t\tthis.world.gravity.set(0, -9.82, 0);\r\n\t\t\tthis.world.broadphase = new CANNON.NaiveBroadphase();\r\n\t\t\tthis.world.solver.iterations = 10;\r\n\t\t}\r\n\t\t//this.createCannonScene();\r\n\t}\r\n\r\n\tupdateCannonPhysics(deta) {\r\n\t\tif ((typeof this.world == 'undefined') || (this.world == null)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (typeof CANNON != undefined) {\r\n\t\t\tthis.world.step(this.timeSteptimeStep);\r\n\t\t}\r\n\t}\r\n\r\n\tdestroyCannonPhysics() {\r\n\t\tconsole.log('destroyCannonPhysics');\r\n\t}\r\n\r\n\tinitAmmoPhysics() {\r\n\t\t//https://github.com/kripken/ammo.js/blob/master/examples/hello_world.js\r\n\t\tif (typeof Ammo != undefined) {\r\n\t\t\tconsole.log('init Ammo');\r\n\t\t\tthis.collisionConfiguration = new Ammo.btDefaultCollisionConfiguration();\r\n\t\t\tthis.dispatcher = this.dp = new Ammo.btCollisionDispatcher(this.collisionConfiguration);\r\n\t\t\t//console.log(dispatcher);\r\n\t\t\tthis.overlappingPairCache = new Ammo.btDbvtBroadphase();\r\n\t\t\tthis.solver = new Ammo.btSequentialImpulseConstraintSolver();\r\n\t\t\tthis.world = new Ammo.btDiscreteDynamicsWorld(this.dispatcher, this.overlappingPairCache, this.solver, this.collisionConfiguration);\r\n\t\t\tthis.world.setGravity(new Ammo.btVector3(0, -10, 0));\r\n\t\t\tthis.trans = new Ammo.btTransform(); // taking this out of the loop below us reduces the leaking\r\n\t\t\t//this.createAmmoScene();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateAmmoPhysics(deta) {\r\n        deta = deta || 1;\r\n\t\tif ((typeof this.world == 'undefined') || (this.world == null)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (typeof Ammo != undefined) {\r\n\t\t\t//this.world.stepSimulation(1 / 60, 10);\r\n            this.world.stepSimulation(deta, 2);\r\n            //console.log(deta);\r\n\t\t}\r\n\t}\r\n\r\n\tdestroyAmmoPhysics() {\r\n\t\t//https://github.com/kripken/ammo.js/blob/master/examples/hello_world.js\r\n\t\t// Delete objects we created through |new|. We just do a few of them here, but you should do them all if you are not shutting down ammo.js\r\n\t\tAmmo.destroy(this.collisionConfiguration);\r\n\t\tAmmo.destroy(this.dispatcher);\r\n\t\tAmmo.destroy(this.overlappingPairCache);\r\n\t\tAmmo.destroy(this.solver);\r\n\t}\r\n\r\n\tinitOimoPhysics() {\r\n\t\tif (typeof OIMO != undefined) {\r\n\t\t\tthis.world = new OIMO.World(1 / 60, 2);\r\n\t\t\t//this.world.gravity = new OIMO.Vec3(0, -1, 0);\r\n\t\t\tthis.world.clear();\r\n\t\t\t//this.createOimoScene();\r\n\t\t\t//this.infos = document.getElementById(\"info\");\r\n\t\t}\r\n\t}\r\n\r\n\tupdateOimoPhysics(deta) {\r\n\t\t//https://github.com/lo-th/Oimo.js/blob/gh-pages/test_moving.html\r\n\t\tif ((typeof this.world == 'undefined') || (this.world == null)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.world.step();\r\n\t}\r\n\r\n\tdestroyOimoPhysics() {\r\n        console.log('destroyOimoPhysics');\r\n    }\r\n\r\n\tupdatePhysics(deta) {\r\n        //console.log(\"p\");\r\n\t\tif ((typeof this.world == 'undefined') || (this.world == null)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.setPhysicsType[this.physicsIndex] == 'Oimo.js') {\r\n\t\t\tthis.updateOimoPhysics(deta);\r\n\t\t}\r\n\t\tif (this.setPhysicsType[this.physicsIndex] == 'Cannon.js') {\r\n\t\t\tthis.updateCannonPhysics(deta);\r\n\t\t}\r\n\t\tif (this.setPhysicsType[this.physicsIndex] == 'Ammo.js') {\r\n\t\t\tthis.updateAmmoPhysics(deta);\r\n\t\t}\r\n\t}\r\n\r\n\tinitPhysics() {\r\n\r\n        if (this.setPhysicsType[this.physicsIndex] == 'Oimo.js') {\r\n            this.initOimoPhysics();\r\n        }\r\n        if (this.setPhysicsType[this.physicsIndex] == 'Cannon.js') {\r\n            this.initCannonPhysics();\r\n        }\r\n        if (this.setPhysicsType[this.physicsIndex] == 'Ammo.js') {\r\n            this.initAmmoPhysics();\r\n        }\r\n\t\tconsole.log(\"init physics type:\" + this.setPhysicsType[this.physicsIndex]);\r\n    }\r\n\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_framework_module} from './threejs_framework_module';\r\n\r\nexport class Threejs_framework_scene extends Threejs_framework_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n    setup_css3d(){\r\n        //renderCanvas\r\n\t\t//var container = document.getElementById( 'container' );\r\n        var container = document.getElementById( 'renderCanvas' );\r\n        console.log(\"EDITOROROROROR\");\r\n        console.log(container);\r\n\r\n\t\tthis.cameracss3d = new THREE.PerspectiveCamera( 50, window.innerWidth / window.innerHeight, 1, 5000 );\r\n\t\t//this.cameracss3d.position.set( 500, 350, 750 );\r\n\t\t//this.cameracss3d.position.set( 0, 0, 1024+128 );\r\n        this.cameracss3d.position.set( 0, 0, screen.width+32 );\r\n\t\tthis.scenecss3d = new THREE.Scene();\r\n\t\tthis.renderercss3d = new THREE.CSS3DRenderer();\r\n\t\tthis.renderercss3d.setSize( window.innerWidth, window.innerHeight );\r\n\t\tthis.renderercss3d.domElement.style.position = 'absolute';\r\n\t\tthis.renderercss3d.domElement.style.top = 0;\r\n\t\tcontainer.appendChild( this.renderercss3d.domElement );\r\n\r\n\t\tvar self = this;\r\n\t\tfunction onWindowResize() {\r\n\t\t\tself.cameracss3d.aspect = window.innerWidth / window.innerHeight;\r\n\t\t\tself.cameracss3d.updateProjectionMatrix();\r\n\t\t\tself.renderercss3d.setSize( window.innerWidth, window.innerHeight );\r\n\t\t}\r\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\r\n\t}\r\n\r\n    //css3d\r\n\tsetup_trackcamera_css3d(){\r\n\t\tvar trackcontrolcss3d = new THREE.TrackballControls( this.cameracss3d );\r\n\t\ttrackcontrolcss3d.rotateSpeed = 4;\r\n\t\ttrackcontrolcss3d.zoomSpeed = 0.01;\r\n\t\tthis.trackcontrolcss3d = trackcontrolcss3d;\r\n\t}\r\n\r\n    //webgl\r\n\tsetup_trackcamera(){\r\n\t\tvar controls = new THREE.TrackballControls( this.camera );\r\n\t\tcontrols.rotateSpeed = 4;\r\n\t\tcontrols.zoomSpeed = 0.01;\r\n\t\tthis.trackcamera = controls;\r\n\t\tcontrols = null;\r\n\t}\r\n\r\n    setup_webgl(){\r\n        var self = this;\r\n\t\tif((this.mode == \"editor\")||(this.mode == \"css3dwebgl\")){\r\n\t\t\tvar webgldiv = document.createElement( 'div' );\r\n\t\t\t//webgldiv.style.width = '800px';\r\n            //webgldiv.style.height = '600px';\r\n            //console.log(\"WINDOW.WIDTH: \" + window.width);\r\n            webgldiv.style.width = screen.width + 'px';\r\n            webgldiv.style.height = screen.height + 'px';\r\n\t\t\twebgldiv.style.backgroundColor = '#000';\r\n\t\t}\r\n        console.log(\"setup scene webgl\");\r\n\r\n\t\tthis.scene = new THREE.Scene();\r\n\t\tthis.scene.name = \"scene\";\r\n\t\tthis.scene.uuid = 'B1E79603-A80E-4CE5-9C5E-34B223CEECF9';\r\n\t\tthis.scenenodes.push(this.scene);\r\n\t\t//this.scene.background = new THREE.Color( 0xff0000 );\r\n\t\tthis.scene.background = new THREE.Color( 0xEEEEEE );\r\n\t\tthis.camera = new THREE.PerspectiveCamera( 75, 800/600, 0.1, 1000 );\r\n\t\t//renderer = new THREE.WebGLRenderer( { alpha: true } ); // init like this\r\n\t\tif((this.mode == \"editor\")||(this.mode == \"css3dwebgl\")){\r\n            console.log(\"editor | csswebgl\");\r\n\t\t\tthis.renderer = new THREE.WebGLRenderer({ alpha: true,antialias: true  });\r\n\t\t\tthis.renderer.domElement.style.position = 'absolute';\r\n\t\t\tthis.renderer.domElement.style.top = 0;\r\n\t\t\t//this.renderer.setSize( 800, 600 );\r\n            this.renderer.setSize( screen.width, screen.height );\r\n\t\t}else{\r\n            console.log(\"default\");\r\n\t\t\t//this.canvas = document.getElementById(\"container\");\r\n            this.canvas = document.getElementById( 'renderCanvas' );\r\n\t\t\tthis.renderer = new THREE.WebGLRenderer({ alpha: true,antialias: true  });\r\n            //this.renderer.domElement.style.position = 'absolute';\r\n\t\t\t//this.renderer.domElement.style.top = 0;\r\n            this.renderer.setSize( 800, 600 );\r\n            this.renderer.domElement.style.height = '100%';\r\n            this.renderer.domElement.style.width = '100%';\r\n\t\t\t//this.renderer.setSize( window.innerWidth, window.innerHeight );\r\n            //this.renderer.setSize( 800, 600 );\r\n            //console.log(window.innerWidth);\r\n            //console.log(window.innerHeight);\r\n\t\t\tthis.canvas.appendChild(this.renderer.domElement);\r\n\r\n            function onWindowResize() {\r\n                //console.log(window.innerWidth);\r\n    \t\t\tself.camera.aspect = window.innerWidth / window.innerHeight;\r\n    \t\t\tself.camera.updateProjectionMatrix();\r\n    \t\t\tself.renderer.setSize( window.innerWidth, window.innerHeight );\r\n    \t\t}\r\n    \t\twindow.addEventListener( 'resize', onWindowResize, false );\r\n\r\n\t\t}\r\n\t\t//this.renderer.setClearColor( 0xffffff, 0);\r\n\t\t//this.renderer.setClearColor(0xEEEEEE);\r\n\t\tthis.renderer.autoClear = false;\r\n\t\t//this.renderer.shadowMap.enabled = true;\r\n\t\t//this.renderer.shadowMap.type = THREE.PCFShadowMap; //THREE.BasicShadowMap;\r\n\r\n\t\tif((this.mode == \"editor\")||(this.mode == \"css3dwebgl\")){\r\n            console.log(\"editor\",\":\",\"css3dwebgl\");\r\n\t\t\twebgldiv.appendChild(this.renderer.domElement);\r\n\t\t\tvar object = new THREE.CSS3DObject( webgldiv );\r\n\t\t\tobject.position.set( 0, 0, 0 );\r\n\t\t\tobject.rotation.y = 0;\r\n\t\t\tvar group = new THREE.Group();\r\n\t\t\tgroup.add( object );\r\n\t\t\tif(this.mode == \"editor\"){\r\n\t\t\t\tthis.setup_editor(group);\r\n\t\t\t}\r\n\t\t\tthis.scenecss3d.add( group );\r\n\t\t}\r\n\t\t//this.setup_webgl_basics();\r\n\t\t//this.setup_trackcamera();\r\n\t}\r\n\r\n    setup_renderpass(){\r\n\t\tvar copyPass = new THREE.ShaderPass(THREE.CopyShader);\r\n\t\tcopyPass.renderToScreen = true;\r\n\t\tvar renderpass1 = new THREE.RenderPass(this.scene, this.camera);\r\n\t\trenderpass1.renderToScreen = false;\r\n\t\tif((this.scenehud !=null)&&(this.camerahud != null)){\r\n\t\t\tvar renderpass2 = new THREE.RenderPass(this.scenehud, this.camerahud);\r\n\t\t\trenderpass2.clear = false;\r\n\t\t}\r\n\t\tthis.effectComposer = new THREE.EffectComposer(this.renderer);\r\n\t\tthis.effectComposer.addPass(renderpass1);\r\n\t\tif((this.scenehud !=null)&&(this.camerahud != null)){\r\n        \tthis.effectComposer.addPass(renderpass2);\r\n\t\t}\r\n\t\tthis.effectComposer.addPass(copyPass);\r\n\t}\r\n\r\n    render(){\r\n\t\trequestAnimationFrame(()=>{this.render()});\r\n        //console.log(\"update?\");\r\n\t\t//this.cube.rotation.x += 0.1;\r\n\t\t//this.cube.rotation.y += 0.1;\r\n\t\tthis.update();\r\n\t\tif(this.trackcamera !=null){\r\n\t\t\tthis.trackcamera.update();\r\n\t\t}\r\n\r\n\t\tif(this.trackcontrolcss3d !=null){\r\n\t\t\tthis.trackcontrolcss3d.update();\r\n\t\t}\r\n\r\n\t\t//custom update function check\r\n        if (this.scene != null) {\r\n            if (this.bupdateobjects == true) {\r\n                this.scene.traverse(function (object) {\r\n                    if (typeof object.update != 'undefined') {\r\n                        object.update();\r\n                    }\r\n                    if (typeof object.script != 'undefined') {\r\n                        for (var obs in object.script) {\r\n                            if (object.script[obs].update != null) {\r\n                                object.script[obs].update();\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\t\t//if (this.bablephysics == true) {\r\n            //this.updatePhysics();\r\n        //}\r\n\r\n\t\tif(this.renderercss3d !=null){\r\n\t\t\tthis.renderercss3d.render( this.scenecss3d, this.cameracss3d );\r\n\t\t\t//console.log(\"render?\");\r\n\t\t}\r\n\r\n\t\t//this.renderer.render(this.scene, this.camera);\r\n\t\tif(this.effectComposer !=null){\r\n\t\t\tthis.effectComposer.render();\r\n\t\t}\r\n\t}\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_framework_module} from './threejs_framework_module';\r\n\r\nexport class Threejs_framework_script extends Threejs_framework_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n    //===============================================\r\n    // scripts components\r\n    //===============================================\r\n\tclearScripts() {\r\n\t\tvar myNode = document.getElementById('scriptcomponents');\r\n\t\twhile (myNode.firstChild) {\r\n\t\t\tmyNode.removeChild(myNode.firstChild);\r\n\t\t}\r\n\t}\r\n\r\n\taddScript(filename) {\r\n        var head = document.getElementById('scriptcomponents');\r\n        var escript = document.createElement('script');\r\n        escript.src = filename;\r\n        escript.type = \"text/javascript\";\r\n        head.appendChild(escript);\r\n    }\r\n\r\n\tcreatescript(scriptname, args) {\r\n\t\tconsole.log('loaded script component name: ' + scriptname);\r\n\t\tthis.scriptcomponents[scriptname] = args;\r\n    }\r\n\r\n\tcreateComponent(object, name) {\r\n\t\tvar capp;\r\n\t\tfor (var sc in this.scriptcomponents) {\r\n\t\t\tif (name == sc) {\r\n\t\t\t\tcapp = this.scriptcomponents[sc];\r\n\t\t\t\t//console.log('found!');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (capp != null) {\r\n\t\t\tvar sapp = capp(this);\r\n\t\t\tobject.script[name] = new sapp(object);\r\n\t\t\tcapp = null;\r\n\t\t\tsapp = null;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_framework_module} from './threejs_framework_module';\r\n\r\nexport class Threejs_framework_ui extends Threejs_framework_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\n\r\nimport {Threejs_framework} from '../threejs_framework/threejs_framework';\r\n\r\nimport {Threejs_game_css3d} from './threejs_game_css3d';\r\nimport {Threejs_game_terrain} from './threejs_game_terrain';\r\nimport {Threejs_game_scene} from './threejs_game_scene';\r\nimport {Threejs_game_hud} from './threejs_game_hud';\r\nimport {Threejs_game_controller} from './threejs_game_controller';\r\nimport {Threejs_game_character} from './threejs_game_character';\r\nimport {Threejs_game_physics} from './threejs_game_physics';\r\n\r\n// Converts from degrees to radians.\r\nMath.radians = function(degrees) {\r\n  return degrees * Math.PI / 180;\r\n};\r\n\r\n// Converts from radians to degrees.\r\nMath.degrees = function(radians) {\r\n  return radians * 180 / Math.PI;\r\n};\r\n\r\n//RFC Type 4 (random) schema\r\n/*\r\nvar uuid = function() {\r\n    var buf = new Uint32Array(4);\r\n    window.crypto.getRandomValues(buf);\r\n    var idx = -1;\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        idx++;\r\n        var r = (buf[idx>>3] >> ((idx%8)*4))&15;\r\n        var v = c == 'x' ? r : (r&0x3|0x8);\r\n        return v.toString(16);\r\n    });\r\n};\r\n*/\r\n\r\nexport class Threejs_game extends Threejs_framework{\r\n    constructor(args){\r\n        super(args);\r\n        console.log(\"init Threejs_game...\");\r\n        if(!args){\r\n            args = {};\r\n        }\r\n\r\n        this.character = null;\r\n        this.controllerid = 0;\r\n\t\tthis.keys={left:0,right:0,forward:0,back:0,rotate_right:0,rotate_left:0};\r\n\t\tthis.moveVector = THREE.Vector3(0,0,0)\r\n        this.tbv30 = new Ammo.btVector3();\r\n        this.transformAux1 = new Ammo.btTransform();\r\n        //console.log(this.tbv30);\r\n\r\n        new Threejs_game_css3d(this);\r\n        new Threejs_game_terrain(this);\r\n        new Threejs_game_scene(this);\r\n        new Threejs_game_hud(this);\r\n        new Threejs_game_controller(this);\r\n        new Threejs_game_character(this);\r\n        new Threejs_game_physics(this);\r\n\r\n    }\r\n\r\n    init(){\r\n        super.init();\r\n        this.setup();\r\n    }\r\n\r\n    update(){\r\n        super.update();\r\n        //console.log(\"update?\");\r\n        if(this.controlOrbit !=null){\r\n            this.controlOrbit.update();\r\n            //console.log(\"update??\");\r\n        }\r\n    }\r\n\r\n    simulate(dt) {\r\n        this.updatePhysics(dt);\r\n    }\r\n\r\n    start_physics(){\r\n        console.log(\"start_physics\");\r\n        var self = this;\r\n        var last = Date.now();\r\n        function mainLoop() {\r\n            var now = Date.now();\r\n            self.simulate(now - last);\r\n            last = now;\r\n        }\r\n\r\n        if (this.interval) clearInterval(this.interval);\r\n        this.interval = setInterval(mainLoop, 1000/60);\r\n    }\r\n\r\n    create_sphere_physics(){\r\n        var self = this;\r\n        var geometry = new THREE.SphereBufferGeometry( 1, 4, 4 );\r\n        var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );\r\n        var sphere = new THREE.Mesh( geometry, material );\r\n        this.scene.add( sphere );\r\n        sphere.position.set(0,10,0);\r\n        //var body = this.create_playershape({obj:threeObject});\r\n        var body = this.create_boxshape({obj:sphere});\r\n        sphere.userData.physicsBody = body;\r\n\r\n        sphere.update= function(){\r\n            var objPhys = sphere.userData.physicsBody;\r\n            var ms = objPhys.getMotionState();\r\n            if ( ms ) {\r\n                ms.getWorldTransform( self.transformAux1 );\r\n                var p = self.transformAux1.getOrigin();\r\n                var q = self.transformAux1.getRotation();\r\n                sphere.position.set( p.x(), p.y(), p.z() );\r\n                //sphere.quaternion.set( q.x(), q.y(), q.z(), q.w() );\r\n                //console.log(\"update?\");\r\n            }\r\n        }\r\n        this.world.addRigidBody( body );\r\n    }\r\n\r\n    setup(){\r\n\r\n        this.bablephysics = true;\r\n        this.initPhysics();\r\n        this.create_input();\r\n        this.camera.position.set(0,20,512);\r\n        this.camera.lookAt(new THREE.Vector3(0,0,0));\r\n        this.start_physics();\r\n        //this.controlOrbit = new THREE.OrbitControls( this.camera );\r\n        //this.hideloadingscreen();\r\n        //console.log(window.width);\r\n        //console.log(screen.width);\r\n        console.log(\"setup\");\r\n\r\n        //this.createBaseHUD();\r\n        //this.create_raycast_hud();//bug ace editor conflict\r\n\r\n        this.createhud();\r\n        //this.createbasescene();\r\n        //this.create_terrain03();\r\n        this.create_terrain04();\r\n        this.simple_pawn();\r\n        //this.createinterface();\r\n        var geometry = new THREE.BoxGeometry( 2, 2, 2 );\r\n\t\tvar material = new THREE.MeshBasicMaterial( { color: 0x00ffff } );\r\n\t\tvar cube = new THREE.Mesh( geometry, material );\r\n        cube.position.set(0,13,5);\r\n        //cube.update =function(){\r\n            //cube.rotation.x += 0.1;\r\n            //cube.rotation.y += 0.1;\r\n        //};\r\n\t\tthis.scene.add( cube );\r\n        this.create_sphere_physics();\r\n\r\n        //console.log(this.world);\r\n\r\n    }\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_game_module} from './threejs_game_module';\r\n\r\n//http://stackoverflow.com/questions/15696963/three-js-set-and-read-camera-look-vector\r\nTHREE.Utils = {\r\n    cameraLookDir: function(camera) {\r\n        var vector = new THREE.Vector3(0, 0, -1);\r\n        vector.applyEuler(camera.rotation, camera.rotation.order);\r\n        return vector;\r\n    }\r\n};\r\n\r\nexport class Threejs_game_character extends Threejs_game_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n    simple_pawn(){\r\n        var terrainMaxHeight = 8;\r\n\r\n        var self = this;\r\n        // SPHERE\r\n        var threeObject = null;\r\n        //var shape = null;\r\n\r\n        var objectSize = 3;\r\n        //var margin = 0.05;\r\n\r\n        //var radius = 1 + Math.random() * objectSize;\r\n        //threeObject = new THREE.Mesh( new THREE.SphereGeometry( radius, 20, 20 ), this.createObjectMaterial() );\r\n        var geometry;\r\n        geometry = new THREE.ConeBufferGeometry( 1, 2, 4 );\r\n        //geometry = new THREE.SphereGeometry( radius, 20, 20 );\r\n        geometry.rotateX( - Math.PI / 2 );\r\n\r\n        threeObject = new THREE.Mesh( geometry, this.createObjectMaterial() );\r\n        threeObject.position.set( 0, terrainMaxHeight + objectSize + 2, 0);\r\n        //=======================================\r\n        /*\r\n        shape = new Ammo.btSphereShape( radius );\r\n        shape.setMargin( margin );\r\n\r\n        //threeObject.position.set( ( Math.random() - 0.5 ) * terrainWidth * 0.6, terrainMaxHeight + objectSize + 2, ( Math.random() - 0.5 ) * terrainDepth * 0.6 );\r\n        //threeObject.position.set( 64, terrainMaxHeight + objectSize + 2, 64);\r\n        //threeObject.position.set( 0, terrainMaxHeight + objectSize + 2, 0);\r\n\r\n        var mass = objectSize * 5;\r\n        var localInertia = new Ammo.btVector3( 0, 0, 0 );\r\n        shape.calculateLocalInertia( mass, localInertia );\r\n\r\n        //console.log(shape);\r\n        var transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        var pos = threeObject.position;\r\n        transform.setOrigin( new Ammo.btVector3( pos.x, pos.y, pos.z ) );\r\n        var motionState = new Ammo.btDefaultMotionState( transform );\r\n        var rbInfo = new Ammo.btRigidBodyConstructionInfo( mass, motionState, shape, localInertia );\r\n        var body = new Ammo.btRigidBody( rbInfo );\r\n        console.log(body);\r\n        body.setFriction(1);\r\n        body.setDamping(0.8, 1.0);\r\n        */\r\n        var body = this.create_playershape({obj:threeObject});\r\n\r\n\r\n        threeObject.userData.physicsBody = body;\r\n\r\n        this.scene.add( threeObject );\r\n        //dynamicObjects.push( threeObject );\r\n        this.world.addRigidBody( body );\r\n\r\n        var transformAux1 = new Ammo.btTransform();\r\n\r\n        var vecdir = new THREE.Vector3(); // create once and reuse it!\r\n        //console.log(self.controlOrbit);\r\n        var axis = new THREE.Vector3( 0, 1, 0 );\r\n\r\n        var rotate = 0;\r\n\r\n\r\n        threeObject.update= function(){\r\n            var objPhys = threeObject.userData.physicsBody;\r\n            var ms = objPhys.getMotionState();\r\n            if ( ms ) {\r\n                ms.getWorldTransform( transformAux1 );\r\n                var p = transformAux1.getOrigin();\r\n                var q = transformAux1.getRotation();\r\n                threeObject.position.set( p.x(), p.y(), p.z() );\r\n                //threeObject.quaternion.set( q.x(), q.y(), q.z(), q.w() );\r\n                //console.log(\"update?\");\r\n            }\r\n            var bmove = false;\r\n            var bphysicscontrol = true;\r\n\r\n            if(self.character !=null){\r\n                //console.log(self.keys.left);\r\n                vecdir = self.camera.getWorldDirection();\r\n                vecdir.normalize();\r\n                var theta = Math.atan2(vecdir.x,vecdir.z);\r\n                var vecface;\r\n                //self.camera.useQuaternion = true;\r\n\r\n                if(rotate > 360){rotate = 0;}\r\n                if(rotate < 0){rotate = 360;}\r\n                if(self.keys.rotate_left){rotate -= 0.1;}\r\n                if(self.keys.rotate_right){rotate += 0.1;}\r\n\r\n                var elapsedTime = 1;\r\n                var radius = 10;\r\n\r\n                self.camera.position.x = threeObject.position.x + radius * Math.cos( rotate * elapsedTime );\r\n                self.camera.position.y = threeObject.position.y + 5;\r\n                self.camera.position.z = threeObject.position.z + radius * Math.sin( rotate * elapsedTime );\r\n                self.camera.lookAt( threeObject.position );\r\n\r\n                /*\r\n                if(self.controlOrbit !=null){\r\n                    if(threeObject !=null){\r\n                        //self.controlOrbit.target.set(threeObject.position.x, threeObject.position.y, threeObject.position.z);\r\n                        self.controlOrbit.target.copy(threeObject.position);\r\n                        self.controlOrbit.maxDistance = 10;\r\n                        //self.controlOrbit.enableDamping = true;\r\n                        //self.controlOrbit.enableDamping = true;\r\n                        self.controlOrbit.autoRotate = false;\r\n                    }\r\n                }\r\n                */\r\n\r\n                var speed = 1;\r\n                if(!bphysicscontrol){\r\n                    speed = 1;\r\n                }else{\r\n                    speed = 10;\r\n                }\r\n\r\n                //var speed = 10;\r\n\r\n                if(self.keys.left){\r\n                    threeObject.rotation.y = theta - Math.PI/2 ;\r\n\r\n                    vecface = new THREE.Vector3( 0, 0, -1).applyAxisAngle( axis, theta - Math.PI/2 );\r\n                    vecface.normalize();\r\n                    vecface.multiplyScalar(speed);\r\n                    if(!bphysicscontrol){\r\n                        threeObject.position.x += vecface.x;\r\n                        threeObject.position.z += vecface.z;\r\n                    }\r\n\r\n                    self.tbv30.setValue(vecface.x,0,vecface.z);\r\n                    threeObject.dirvec = vecface;\r\n                    //threeObject.userData.physicsBody.setLinearVelocity(self.tbv30);\r\n                    //self.camera.translateX(  -10 );\r\n                    bmove = true;\r\n                }\r\n                if(self.keys.right){\r\n                    threeObject.rotation.y = theta + Math.PI/2 ;\r\n\r\n                    vecface = new THREE.Vector3( 0, 0, -1).applyAxisAngle( axis, theta + Math.PI/2 );\r\n                    vecface.normalize();\r\n                    vecface.multiplyScalar(speed);\r\n                    if(!bphysicscontrol){\r\n                        threeObject.position.x += vecface.x;\r\n                        threeObject.position.z += vecface.z;\r\n                    }\r\n\r\n                    self.tbv30.setValue(vecface.x,0,vecface.z);\r\n                    threeObject.dirvec = vecface;\r\n                    //threeObject.userData.physicsBody.setLinearVelocity(self.tbv30);\r\n                    //self.camera.translateX(  10 );\r\n                    bmove = true;\r\n                }\r\n                if(self.keys.forward){\r\n                    threeObject.rotation.y = theta + Math.PI ;\r\n                    vecface = new THREE.Vector3( 0, 0, 1).applyAxisAngle( axis, theta );\r\n                    vecface.normalize();\r\n                    vecface.multiplyScalar(speed);\r\n                    //console.log(vecface);\r\n                    if(!bphysicscontrol){\r\n                        threeObject.position.x += vecface.x;\r\n                        threeObject.position.z += vecface.z;\r\n                    }\r\n                    //console.log(vecface);\r\n                    threeObject.dirvec = vecface;\r\n                    self.tbv30.setValue(vecface.x,0,vecface.z);\r\n                    //threeObject.userData.physicsBody.setLinearVelocity(self.tbv30);\r\n                    bmove = true;\r\n                }\r\n                if(self.keys.back){\r\n                    threeObject.rotation.y = theta;\r\n\r\n                    vecface = new THREE.Vector3( 0, 0, -1).applyAxisAngle( axis, theta );\r\n                    vecface.normalize();\r\n                    vecface.multiplyScalar(speed);\r\n                    if(!bphysicscontrol){\r\n                        threeObject.position.x += vecface.x;\r\n                        threeObject.position.z += vecface.z;\r\n                    }\r\n                    threeObject.dirvec = vecface;\r\n                    self.tbv30.setValue(vecface.x,0,vecface.z);\r\n                    //threeObject.userData.physicsBody.setLinearVelocity(self.tbv30);\r\n                    bmove = true;\r\n                }\r\n\r\n                if(bphysicscontrol){\r\n                    if(!bmove){\r\n                        self.tbv30.setValue(0,0,0);\r\n                        //threeObject.userData.physicsBody.setLinearVelocity(self.tbv30);\r\n                    }\r\n                    if(bmove){\r\n                        //console.log(\"move?\");\r\n                        threeObject.userData.physicsBody.activate();\r\n                        threeObject.userData.physicsBody.setLinearVelocity(self.tbv30);\r\n                    }\r\n                }\r\n                threeObject.dirrotate = theta;\r\n                theta = null;\r\n            }\r\n        }\r\n        var raycaster = new THREE.Raycaster();\r\n        raycaster.far = 2;\r\n        //console.log(raycaster);\r\n        //raycaster.distance = 5;\r\n\r\n        threeObject.interact= function(){\r\n            if(threeObject.dirvec ==null){\r\n                threeObject.dirvec = new THREE.Vector3(0, 0, -1);\r\n                console.log(threeObject.dirvec);\r\n            }\r\n\r\n            raycaster.set(threeObject.position, threeObject.dirvec);\r\n\r\n            var intersects = raycaster.intersectObjects( self.scene.children );\r\n            console.log(intersects);\r\n            if (intersects.length>0){\r\n                console.log(\"Intersected object:\", intersects.length);\r\n                console.log(intersects[ 0 ]);\r\n                intersects[ 0 ].object.material.color.setHex( Math.random() * 0xffffff );\r\n            }\r\n        }\r\n\r\n        threeObject.impulse = function(){\r\n            console.log(\"move?\");\r\n            self.tbv30.setValue(0,100,0);\r\n            threeObject.userData.physicsBody.setLinearVelocity(self.tbv30);\r\n        }\r\n\r\n        threeObject.movephysics = function(){\r\n            //console.log(\"move?\");\r\n            //self.tbv30.setValue(0,100,0);\r\n            var transform = new Ammo.btTransform();\r\n            transform.setIdentity();\r\n            transform.setOrigin( new Ammo.btVector3( threeObject.position.x, threeObject.position.y+0.1, threeObject.position.z ) );\r\n            console.log(threeObject.userData.physicsBody);\r\n            threeObject.userData.physicsBody.setWorldTransform(transform);\r\n\r\n\r\n            //threeObject.userData.physicsBody.setLinearVelocity(self.tbv30);\r\n        }\r\n\r\n        this.character = threeObject;\r\n    }\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_game_module} from './threejs_game_module';\r\n\r\nexport class Threejs_game_controller extends Threejs_game_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n    create_input(){\r\n        var self = this;\r\n\r\n\t\t//this.keys={letft:0,right:0,forward:0,back:0};\r\n\t\twindow.addEventListener(\"keydown\", handleKeyDown, false);\r\n\t\twindow.addEventListener(\"keyup\", handleKeyUp, false);\r\n\t\tfunction handleKeyDown(evt){\r\n            console.log(evt.keyCode);\r\n            //if (evt.keyCode==69){//E\r\n            if (evt.keyCode==70){//E\r\n                if(self.character !=null){\r\n                    //console.log(self.character);\r\n                    if(typeof self.character.interact === 'function'){\r\n                        self.character.interact();\r\n                    }\r\n                }\r\n            }\r\n            if (evt.keyCode==90){//Z\r\n                if(self.character !=null){\r\n                    //console.log(self.character);\r\n                    //if(typeof self.character.impulse === 'function'){\r\n                        //self.character.impulse();\r\n                    //}\r\n                    //self.start_physics();\r\n                    //self.create_sphere_physics();\r\n                    self.character.movephysics();\r\n                }\r\n            }\r\n\r\n            if (evt.keyCode==88){//X\r\n                if(self.character !=null){\r\n                    //console.log(self.character);\r\n                    //if(typeof self.character.impulse === 'function'){\r\n                        //self.character.impulse();\r\n                    //}\r\n                    //self.start_physics();\r\n                    self.create_sphere_physics();\r\n                }\r\n            }\r\n\r\n            if (evt.keyCode==67){//C\r\n                if(self.character !=null){\r\n                    //console.log(self.character);\r\n                    //if(typeof self.character.impulse === 'function'){\r\n                        //self.character.impulse();\r\n                    //}\r\n                    //self.start_physics();\r\n                    self.create_sphere_physics();\r\n                }\r\n            }\r\n\r\n            if (evt.keyCode==81){//Q\r\n\t\t\t\tself.keys.rotate_left=1;\r\n\t\t\t\t//console.log(\"left\");\r\n\t\t\t}\r\n            if (evt.keyCode==69){//E\r\n\t\t\t\tself.keys.rotate_right=1;\r\n\t\t\t}\r\n\r\n            if (evt.keyCode==65){//A\r\n\t\t\t\tself.keys.left=1;\r\n\t\t\t\t//console.log(\"left\");\r\n\t\t\t}\r\n\t\t\tif (evt.keyCode==68){//D\r\n                self.keys.right=1;\r\n\t\t\t\t//console.log(\"right\");\r\n\t\t\t}\r\n\t\t\tif (evt.keyCode==87){//W\r\n\t\t\t\tself.keys.forward=1;\r\n\t\t\t\t//console.log(\"up\");\r\n\t\t\t}\r\n\t\t\tif (evt.keyCode==83){//S\r\n\t\t\t\tself.keys.back=1;\r\n\t\t\t\t//console.log(\"down\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction handleKeyUp(evt){\r\n            if (evt.keyCode==81){//Q\r\n\t\t\t\tself.keys.rotate_left=0;\r\n\t\t\t}\r\n            if (evt.keyCode==69){//E\r\n\t\t\t\tself.keys.rotate_right=0;\r\n\t\t\t}\r\n\t\t\tif (evt.keyCode==65){\r\n\t\t\t\tself.keys.left=0;\r\n\t\t\t}\r\n\t\t\tif (evt.keyCode==68){\r\n\t\t\t\tself.keys.right=0;\r\n\t\t\t}\r\n\t\t\tif (evt.keyCode==87){\r\n\t\t\t\tself.keys.forward=0;\r\n\t\t\t}\r\n\t\t\tif (evt.keyCode==83){\r\n\t\t\t\tself.keys.back=0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_game_module} from './threejs_game_module';\r\n\r\nexport class Threejs_game_css3d extends Threejs_game_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n    createinterface(){\r\n        var html = '<div method=\"click\">Click Me</div>';\r\n        var methods = {\r\n            click: function (elem) {\r\n                console.log('element clicked!', elem);\r\n            }\r\n        };\r\n        var options = {\r\n            throttle: 250,          // throttle for the renderer in milliseconds, can be disabled with false (default 250ms)\r\n            observe: true,         // watches the element for changes and re-renders (default true)\r\n            alwaysOnTop: false,    // ensures the UI is always on top of everything in the scene (default false)\r\n            debug: false           // places a small sphere at the click point (default false)\r\n        };\r\n        var ui = new THREE.Interface(html, methods, options);\r\n        this.scene.add(ui);\r\n    }\r\n\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_game_module} from './threejs_game_module';\r\n\r\nexport class Threejs_game_hud extends Threejs_game_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n    createBaseHUD(){\r\n        var spriteTL, spriteTR, spriteBL, spriteBR, spriteC;\r\n        var self = this;\r\n\r\n        function updateHUDSprites () {\r\n            console.log(window.innerWidth);\r\n\t\t\tvar width = window.innerWidth / 2;\r\n\t\t\tvar height = window.innerHeight / 2;\r\n\t\t\tvar material = spriteTL.material;\r\n\t\t\tvar imageWidth = material.map.image.width / 2;\r\n\t\t\tvar imageHeight = material.map.image.height / 2;\r\n\t\t\tspriteTL.position.set( - width + imageWidth,   height - imageHeight, 0 ); // top left\r\n\t\t\tspriteTR.position.set(   width - imageWidth,   height - imageHeight, 0 ); // top right\r\n\t\t\tspriteBL.position.set( - width + imageWidth, - height + imageHeight, 0 ); // bottom left\r\n\t\t\tspriteBR.position.set(   width - imageWidth, - height + imageHeight, 0 ); // bottom right\r\n\t\t\tspriteC.position.set( 0, 0, 0 ); // center\r\n\t\t}\r\n\r\n        function createHUDSprites ( texture ) {\r\n\t\t\tvar material = new THREE.SpriteMaterial( { map: texture } );\r\n\t\t\tvar width = material.map.image.width;\r\n\t\t\tvar height = material.map.image.height;\r\n\t\t\tspriteTL = new THREE.Sprite( material );\r\n\t\t\tspriteTL.scale.set( width, height, 1 );\r\n\t\t\tself.scenehud.add( spriteTL );\r\n\r\n\t\t\tspriteTR = new THREE.Sprite( material );\r\n\t\t\tspriteTR.scale.set( width, height, 1 );\r\n\t\t\tself.scenehud.add( spriteTR );\r\n\t\t\tspriteBL = new THREE.Sprite( material );\r\n\t\t\tspriteBL.scale.set( width, height, 1 );\r\n\t\t\tself.scenehud.add( spriteBL );\r\n\t\t\tspriteBR = new THREE.Sprite( material );\r\n\t\t\tspriteBR.scale.set( width, height, 1 );\r\n\t\t\tself.scenehud.add( spriteBR );\r\n\t\t\tspriteC = new THREE.Sprite( material );\r\n\t\t\tspriteC.scale.set( width, height, 1 );\r\n\t\t\tself.scenehud.add( spriteC );\r\n\r\n\t\t\tupdateHUDSprites();\r\n\t\t}\r\n        var textureLoader = new THREE.TextureLoader();\r\n        var mapA = textureLoader.load( \"assets/sprite0.png\", createHUDSprites );\r\n    }\r\n\r\n    createhud(){\r\n        var self = this;\r\n        var textureLoader = new THREE.TextureLoader();\r\n\r\n        function createHUDSprites ( texture ) {\r\n            var material = new THREE.SpriteMaterial( { map: texture } );\r\n\r\n            var spriteTL = new THREE.Sprite( material );\r\n\r\n            var spriteTLL = new THREE.Sprite( material );\r\n            var material = spriteTL.material;\r\n\t\t\tvar imageWidth = material.map.image.width / 2;\r\n\t\t\tvar imageHeight = material.map.image.height / 2;\r\n            var width = material.map.image.width;\r\n\t\t\tvar height = material.map.image.height;\r\n            console.log(width,\":\",height);\r\n            spriteTL.scale.set( width, height, 1 );\r\n            spriteTLL.scale.set( width, height, 1 );\r\n            var width = window.innerWidth / 2;\r\n\t\t\tvar height = window.innerHeight / 2;\r\n            spriteTL.position.set( - width + imageWidth,   height - imageHeight, 0 ); // top left\r\n            spriteTLL.position.set( - width + imageWidth,   height - imageHeight - 50, 0 ); // top left\r\n\r\n            self.scenehud.add( spriteTL );\r\n\r\n            self.scenehud.add( spriteTLL );\r\n\r\n            console.log(spriteTL);\r\n            function onDocumentMouseDown(event){console.log(\"click\");}\r\n            function onDocumentOver(event){console.log(\"onDocumentOver\");\r\n                spriteTL.scale.set( 128+10, 128+10, 1 );\r\n            }\r\n            function onDocumentOut(event){console.log(\"onDocumentOut\");\r\n                spriteTL.scale.set( 128, 128, 1 );\r\n            }\r\n\r\n            function onDocumentOver2(event){console.log(\"onDocumentOver\");\r\n                spriteTLL.scale.set( 128+10, 128+10, 1 );\r\n            }\r\n            function onDocumentOut2(event){console.log(\"onDocumentOut\");\r\n                spriteTLL.scale.set( 128, 128, 1 );\r\n            }\r\n            spriteTLL.addEventListener(\"out\", onDocumentOut2, false);\r\n            spriteTLL.addEventListener(\"over\", onDocumentOver2, false);\r\n\r\n\r\n            //spriteTL.addEventListener(\"mousedown\", onDocumentMouseDown, false);\r\n            spriteTL.addEventListener(\"click\", onDocumentMouseDown, false);\r\n\r\n            spriteTL.addEventListener(\"out\", onDocumentOut, false);\r\n            spriteTL.addEventListener(\"over\", onDocumentOver, false);\r\n        }\r\n\r\n        var mapA = textureLoader.load( \"assets/sprite0.png\", createHUDSprites);\r\n    }\r\n\r\n    create_raycast_hud(){\r\n        //https://threejs.org/docs/api/core/Raycaster.html\r\n        var self = this;\r\n        var currentui = null;\r\n        var oldui = null;\r\n\r\n        var raycaster = new THREE.Raycaster();\r\n        var mouse = new THREE.Vector2();\r\n\r\n        function onMouseMove( event ) {\r\n            // calculate mouse position in normalized device coordinates\r\n            // (-1 to +1) for both components\r\n            mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\r\n            mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n            raycaster.setFromCamera( mouse, self.camerahud );\r\n\r\n            var intersects = raycaster.intersectObjects( self.scenehud.children );\r\n            if(intersects.length > 0){\r\n                //console.log(intersects[0].object);\r\n                //https://threejs.org/docs/api/core/EventDispatcher.html\r\n                //intersects[0].object.dispatchEvent({ type: 'click', message: 'vroom vroom!' });\r\n                currentui = intersects[0].object;\r\n                //console.log(\"hit!\");\r\n            }else{\r\n                currentui =null;\r\n            }\r\n            if(currentui != oldui){\r\n                console.log(\"current ui!\");\r\n                if(oldui !=null){\r\n                    oldui.dispatchEvent({ type: 'out', message: 'vroom vroom!' });\r\n                }\r\n                oldui = currentui;\r\n                if(oldui !=null){\r\n                    oldui.dispatchEvent({ type: 'over', message: 'vroom vroom!' });\r\n                }\r\n            }\r\n        }\r\n\r\n        function raycast_mousedown(event){\r\n            event.preventDefault();\r\n            // update the picking ray with the camera and mouse position\r\n            raycaster.setFromCamera( mouse, self.camerahud );\r\n            // calculate objects intersecting the picking ray\r\n            var intersects = raycaster.intersectObjects( self.scenehud.children );\r\n            if(intersects.length > 0){\r\n                console.log(intersects[0].object);\r\n                //https://threejs.org/docs/api/core/EventDispatcher.html\r\n                intersects[0].object.dispatchEvent({ type: 'click', message: 'vroom vroom!' });\r\n            }\r\n            //for ( var i = 0; i < intersects.length; i++ ) {\r\n                //console.log(\"found!\");\r\n            \t//intersects[ i ].object.material.color.set( 0xff0000 );\r\n            //}\r\n        }\r\n\r\n        document.addEventListener( 'mousemove', onMouseMove, false );\r\n        document.addEventListener( 'mousedown', raycast_mousedown, false );\r\n    }\r\n\r\n\r\n\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\n\r\nexport class Threejs_game_module{\r\n\r\n    constructor(args){\r\n        if(!args){\r\n            args = {};\r\n            console.log(\"no args...\");\r\n        }\r\n        var propertyNames = Object.getOwnPropertyNames(Object.getPrototypeOf(this));\r\n        for(var fun in propertyNames){\r\n            //console.log(fun);\r\n            //console.log(propertyNames[fun]);\r\n            if(propertyNames[fun] != \"constructor\"){\r\n                args[propertyNames[fun]] = this[propertyNames[fun]];\r\n            }else{\r\n                //console.log('ignore ' + propertyNames[fun] );\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_game_module} from './threejs_game_module';\r\n\r\nexport class Threejs_game_physics extends Threejs_game_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n    create_boxshape(args){\r\n        args = args || {};\r\n        var shape;\r\n        var margin = 0.05;\r\n        //console.log(args);\r\n        var _obj = args['obj'] || {};\r\n        //console.log(_obj);\r\n        var objectSize = args['objsize'] || 3;\r\n        //console.log(objectSize);\r\n\r\n        var radius = 1 + Math.random() * objectSize;\r\n\r\n        var mass = objectSize * 5;\r\n        var localInertia = new Ammo.btVector3( 0, 0, 0 );\r\n        shape = new Ammo.btSphereShape( radius );\r\n        shape.setMargin( margin );\r\n        shape.calculateLocalInertia( mass, localInertia );\r\n        //console.log(shape);\r\n        var transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        var pos = _obj.position;\r\n        transform.setOrigin( new Ammo.btVector3( pos.x, pos.y, pos.z ) );\r\n        var motionState = new Ammo.btDefaultMotionState( transform );\r\n        var rbInfo = new Ammo.btRigidBodyConstructionInfo( mass, motionState, shape, localInertia );\r\n        var body = new Ammo.btRigidBody( rbInfo );\r\n        //console.log(body);\r\n        body.setFriction(1);\r\n        body.setDamping(0.2, 1.0);\r\n\r\n        return body;\r\n    }\r\n\r\n    //SPHERE\r\n    create_playershape(args){\r\n        args = args || {};\r\n        var shape;\r\n        var margin = 0.05;\r\n        //console.log(args);\r\n        var _obj = args['obj'] || {};\r\n        //console.log(_obj);\r\n        var objectSize = args['objsize'] || 3;\r\n        //console.log(objectSize);\r\n\r\n        var radius = 1 + Math.random() * objectSize;\r\n\r\n        var mass = objectSize * 5;\r\n        var localInertia = new Ammo.btVector3( 0, 0, 0 );\r\n        shape = new Ammo.btSphereShape( radius );\r\n        shape.setMargin( margin );\r\n        shape.calculateLocalInertia( mass, localInertia );\r\n        //console.log(shape);\r\n        var transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        var pos = _obj.position;\r\n        transform.setOrigin( new Ammo.btVector3( pos.x, pos.y, pos.z ) );\r\n        var motionState = new Ammo.btDefaultMotionState( transform );\r\n        var rbInfo = new Ammo.btRigidBodyConstructionInfo( mass, motionState, shape, localInertia );\r\n        var body = new Ammo.btRigidBody( rbInfo );\r\n        //console.log(body);\r\n        body.setFriction(1);\r\n        body.setDamping(0.2, 1.0);\r\n\r\n        return body;\r\n    }\r\n\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_game_module} from './threejs_game_module';\r\n\r\nexport class Threejs_game_scene extends Threejs_game_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n    createbasescene(){\r\n        var geometry = new THREE.BoxGeometry( 1, 1, 1 );\r\n\t\tvar material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\r\n\t\tvar cube = new THREE.Mesh( geometry, material );\r\n        cube.update =function(){\r\n            cube.rotation.x += 0.1;\r\n            cube.rotation.y += 0.1;\r\n        };\r\n\t\tthis.scene.add( cube );\r\n        this.camera.position.z = 5;\r\n        //console.log(this.scene);\r\n    }\r\n\r\n    createbasescene02(){\r\n        var geometry = new THREE.BufferGeometry();\r\n        // create a simple square shape. We duplicate the top left and bottom right\r\n        // vertices because each vertex needs to appear once per triangle.\r\n        var vertices = new Float32Array( [\r\n        \t-1.0, -1.0,  1.0,\r\n        \t 1.0, -1.0,  1.0,\r\n        \t 1.0,  1.0,  1.0,\r\n\r\n        \t 1.0,  1.0,  1.0,\r\n        \t-1.0,  1.0,  1.0,\r\n        \t-1.0, -1.0,  1.0\r\n        ] );\r\n\r\n        // itemSize = 3 because there are 3 values (components) per vertex\r\n        geometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n        var material = new THREE.MeshBasicMaterial( { color: 0xff0000 } );\r\n        var mesh = new THREE.Mesh( geometry, material );\r\n        mesh.update =function(){\r\n            //mesh.rotation.x += 0.1;\r\n            //mesh.rotation.y += 0.1;\r\n        };\r\n\t\tthis.scene.add( mesh );\r\n        this.camera.position.z = 5;\r\n        //console.log(this.scene);\r\n    }\r\n\r\n    createbasescene03(){\r\n        var geometry = new THREE.Geometry();\r\n        var point = new THREE.Vector3( -1,  1, 0 );\r\n        geometry.vertices.push(\r\n        \tpoint,\r\n        \tnew THREE.Vector3( -1, -1, 0 ),\r\n        \tnew THREE.Vector3(  1, -1, 0 )\r\n        );\r\n        geometry.faces.push( new THREE.Face3( 0, 1, 2 ) );\r\n        geometry.verticesNeedUpdate = true;\r\n        geometry.computeBoundingSphere();\r\n\r\n        var material = new THREE.MeshBasicMaterial( { color: 0xff0000 } );\r\n        var mesh = new THREE.Mesh( geometry, material );\r\n        console.log(mesh);\r\n        mesh.update =function(){\r\n            //mesh.geometry.verticesNeedUpdate = true;\r\n            //mesh.rotation.x += 0.1;\r\n            //point.x += 0.1;\r\n            //if(point.x > 1){\r\n                //point.x = -1;\r\n            //}\r\n            //mesh.rotation.y += 0.1;\r\n        };\r\n\t\tthis.scene.add( mesh );\r\n        this.camera.position.z = 10;\r\n        //console.log(this.scene);\r\n    }\r\n\r\n}\r\n","/*\r\n    Project Name: bes-threejs\r\n    Link:https://github.com/Lightnet/bes-threejs\r\n    Created By: Lightnet\r\n    License: cc (creative commons)\r\n\r\n    Information: Please read the readme.md file for more information.\r\n*/\r\nimport {Threejs_game_module} from './threejs_game_module';\r\n\r\nexport class Threejs_game_terrain extends Threejs_game_module{\r\n\r\n    constructor(args){\r\n        super(args);\r\n    }\r\n\r\n    create_terrain01(){\r\n        //https://threejs.org/docs/?q=PlaneBufferGeometry#Reference/Geometries/PlaneBufferGeometry\r\n        //http://jsfiddle.net/tfjvggfu/24/\r\n        //http://stackoverflow.com/questions/20153705/three-js-wireframe-material-all-polygons-vs-just-edges\r\n\r\n        var light = new THREE.HemisphereLight( 0xeeeeee, 0x888888, 1 );\r\n        light.position.set( 0, 20, 0 );\r\n        this.scene.add( light );\r\n\r\n        // axes\r\n        this.scene.add( new THREE.AxisHelper( 20 ) );\r\n        var geometry = new THREE.PlaneBufferGeometry( 8, 8,4,4 );\r\n        geometry.rotateX( - Math.PI / 2 );\r\n\r\n        //var geometry = new THREE.SphereGeometry( 5, 12, 8 );\r\n        //var material = new THREE.MeshBasicMaterial( {color: 0x156289, side: THREE.DoubleSide,wireframe: true} );\r\n        //var material = new THREE.LineBasicMaterial( {color: 0xffffff,transparent: true,opacity: 0.5,side: THREE.DoubleSide} );\r\n        //var material = new THREE.MeshPhongMaterial( {color: 0x156289,emissive: 0x072534,side: THREE.DoubleSide,shading: THREE.FlatShading});\r\n        var material = new THREE.MeshPhongMaterial( {\r\n            color: 0xff0000,\r\n            shading: THREE.FlatShading,\r\n            polygonOffset: true,\r\n            polygonOffsetFactor: 1, // positive value pushes polygon further away\r\n            polygonOffsetUnits: 1,\r\n            side: THREE.DoubleSide,\r\n            wireframe: true\r\n        });\r\n\r\n        var vertices = geometry.attributes.position.array;\r\n        for ( var i = 0, j = 0, l = vertices.length; i < l; i ++, j += 3 ) {\r\n            vertices[ j + 1 ] = Math.random(0,1);\r\n            //vertices[ j + 2 ] = Math.random(0,1);\r\n        }\r\n        var plane = new THREE.Mesh( geometry,material );\r\n        // wireframe - new way\r\n        //var geo = new THREE.EdgesGeometry( plane.geometry ); // or WireframeGeometry\r\n        //var mat = new THREE.LineBasicMaterial( { color: 0xffffff, linewidth: 2} );\r\n        //var wireframe = new THREE.LineSegments( geo, mat );\r\n        //plane.add( wireframe );\r\n        //var vertices = geometry.attributes.position.array;\r\n        //console.log(plane.geometry.attributes.position.array);\r\n        //console.log(plane);\r\n        //plane.rotation.x = 90;\r\n        /*\r\n        plane.update = function(){\r\n            //plane.geometry.verticesNeedUpdate = true;\r\n            //plane.geometry.attributes.needsUpdate = true;\r\n            //plane.geometry.attributes.verticesNeedUpdate = true;\r\n            plane.geometry.attributes.position.needsUpdate = true;\r\n            //plane.rotation.x += 0.1;\r\n            //point.x += 0.1;\r\n            //if(point.x > 1){\r\n                //point.x = -1;\r\n            //}\r\n            //plane.rotation.y += 0.1;\r\n            var vertices = plane.geometry.attributes.position.array;\r\n            for ( var i = 0, j = 0, l = vertices.length; i < l; i ++, j += 3 ) {\r\n\t\t\t\t//vertices[ j + 1 ] += 0.01;\r\n                vertices[ j + 2 ] = Math.random(0,1);\r\n\t\t\t}\r\n            //plane.geometry.attributes.position.array = vertices;\r\n        };\r\n        */\r\n        //console.log(vertices);\r\n        this.scene.add( plane );\r\n        this.camera.position.z = 10;\r\n    }\r\n\r\n    create_terrain02(){\r\n        //https://threejs.org/docs/?q=PlaneBufferGeometry#Reference/Geometries/PlaneBufferGeometry\r\n        //http://jsfiddle.net/tfjvggfu/24/\r\n        //http://stackoverflow.com/questions/20153705/three-js-wireframe-material-all-polygons-vs-just-edges\r\n\r\n        var light = new THREE.HemisphereLight( 0xeeeeee, 0x888888, 1 );\r\n        light.position.set( 0, 20, 0 );\r\n        this.scene.add( light );\r\n        this.scene.add( new THREE.AxisHelper( 20 ) );\r\n        var geometry = new THREE.PlaneBufferGeometry( 8, 8,4,4 );\r\n        geometry.rotateX( - Math.PI / 2 );\r\n        var material = new THREE.MeshPhongMaterial( {\r\n            color: 0xff0000,\r\n            shading: THREE.FlatShading,\r\n            polygonOffset: true,\r\n            polygonOffsetFactor: 1, // positive value pushes polygon further away\r\n            polygonOffsetUnits: 1,\r\n            side: THREE.DoubleSide,\r\n            wireframe: true\r\n        });\r\n        var terrainheight = [];\r\n        var vertices = geometry.attributes.position.array;\r\n        for ( var i = 0, j = 0, l = vertices.length; i < l; i ++, j += 3 ) {\r\n            vertices[ j + 1 ] = Math.random(0,1);\r\n            terrainheight.push(vertices[ j + 1 ]);\r\n            //vertices[ j + 2 ] = Math.random(0,1);\r\n        }\r\n\r\n        var plane = new THREE.Mesh( geometry,material );\r\n        //plane.update = function(){\r\n            //plane.geometry.attributes.position.needsUpdate = true;\r\n            //var vertices = plane.geometry.attributes.position.array;\r\n            //for ( var i = 0, j = 0, l = vertices.length; i < l; i ++, j += 3 ) {\r\n                //vertices[ j + 1 ] = Math.random(0,1);\r\n\t\t\t//}\r\n        //};\r\n\r\n        this.scene.add( plane );\r\n        this.camera.position.z = 10;\r\n    }\r\n\r\n    //world\r\n    create_terrain03(){\r\n        var self = this;\r\n        var light = new THREE.HemisphereLight( 0xeeeeee, 0x888888, 1 );\r\n        light.position.set( 0, 20, 0 );\r\n        this.scene.add( light );\r\n        this.scene.add( new THREE.AxisHelper( 20 ) );\r\n\r\n        var geometry = new THREE.PlaneBufferGeometry( 128, 128,4,4 );\r\n        geometry.rotateX( - Math.PI / 2 );\r\n        var material = new THREE.MeshPhongMaterial( {\r\n            color: 0xff0000,\r\n            shading: THREE.FlatShading,\r\n            polygonOffset: true,\r\n            polygonOffsetFactor: 1, // positive value pushes polygon further away\r\n            polygonOffsetUnits: 1,\r\n            side: THREE.DoubleSide,\r\n            wireframe: true\r\n        });\r\n        var heightData = [];\r\n        var vertices = geometry.attributes.position.array;\r\n        for ( var i = 0, j = 0, l = vertices.length; i < l; i ++, j += 3 ) {\r\n            vertices[ j + 1 ] = Math.floor(Math.random() * 10);\r\n            heightData.push(vertices[ j + 1 ]);\r\n            //vertices[ j + 2 ] = Math.random(0,1);\r\n        }\r\n\r\n        var plane = new THREE.Mesh( geometry,material );\r\n        //plane.update = function(){\r\n            //plane.geometry.attributes.position.needsUpdate = true;\r\n            //var vertices = plane.geometry.attributes.position.array;\r\n            //for ( var i = 0, j = 0, l = vertices.length; i < l; i ++, j += 3 ) {\r\n                //vertices[ j + 1 ] = Math.random(0,1);\r\n\t\t\t//}\r\n        //};\r\n\r\n        this.scene.add( plane );\r\n        this.camera.position.z = 10;\r\n\r\n        var terrainWidthExtents = 100;\r\n        var terrainDepthExtents = 100;\r\n        var terrainWidth = 128;\r\n        var terrainDepth = 128;\r\n        var terrainHalfWidth = terrainWidth / 2;\r\n        var terrainHalfDepth = terrainDepth / 2;\r\n        var terrainMaxHeight = 8;\r\n        var terrainMinHeight = -2;\r\n\r\n        var groundShape;\r\n        groundShape = this.createTerrainShape( heightData );\r\n        //var groundShape = new Ammo.btBoxShape( new Ammo.btVector3(128, 0.1, 128 ) );\r\n        //console.log(groundShape);\r\n\r\n        var groundTransform = new Ammo.btTransform();\r\n        groundTransform.setIdentity();\r\n        // Shifts the terrain, since bullet re-centers it on its bounding box.\r\n        groundTransform.setOrigin( new Ammo.btVector3( 0, ( terrainMaxHeight + terrainMinHeight ) / 2, 0 ) );\r\n        var groundMass = 0;\r\n        var groundLocalInertia = new Ammo.btVector3( 0, 0, 0 );\r\n        var groundMotionState = new Ammo.btDefaultMotionState( groundTransform );\r\n        var groundBody = new Ammo.btRigidBody( new Ammo.btRigidBodyConstructionInfo( groundMass, groundMotionState, groundShape, groundLocalInertia ) );\r\n        this.world.addRigidBody( groundBody );\r\n\r\n    }\r\n\r\n    //world\r\n    create_terrain04(){\r\n        var self = this;\r\n        var light = new THREE.HemisphereLight( 0xeeeeee, 0x888888, 1 );\r\n        light.position.set( 0, 20, 0 );\r\n        this.scene.add( light );\r\n        this.scene.add( new THREE.AxisHelper( 20 ) );\r\n\r\n        var geometry = new THREE.PlaneBufferGeometry( 128, 128,4,4 );\r\n        geometry.rotateX( - Math.PI / 2 );\r\n        var material = new THREE.MeshPhongMaterial( {\r\n            color: 0xff0000,\r\n            shading: THREE.FlatShading,\r\n            polygonOffset: true,\r\n            polygonOffsetFactor: 1, // positive value pushes polygon further away\r\n            polygonOffsetUnits: 1,\r\n            side: THREE.DoubleSide,\r\n            wireframe: true\r\n        });\r\n        var heightData = [];\r\n        var vertices = geometry.attributes.position.array;\r\n        for ( var i = 0, j = 0, l = vertices.length; i < l; i ++, j += 3 ) {\r\n            //vertices[ j + 1 ] = Math.floor(Math.random() * 10);\r\n            heightData.push(vertices[ j + 1 ]);\r\n            //vertices[ j + 2 ] = Math.random(0,1);\r\n        }\r\n\r\n        var plane = new THREE.Mesh( geometry,material );\r\n        //plane.update = function(){\r\n            //plane.geometry.attributes.position.needsUpdate = true;\r\n            //var vertices = plane.geometry.attributes.position.array;\r\n            //for ( var i = 0, j = 0, l = vertices.length; i < l; i ++, j += 3 ) {\r\n                //vertices[ j + 1 ] = Math.random(0,1);\r\n\t\t\t//}\r\n        //};\r\n\r\n        this.scene.add( plane );\r\n        this.camera.position.z = 10;\r\n\r\n        var terrainWidthExtents = 100;\r\n        var terrainDepthExtents = 100;\r\n        var terrainWidth = 128;\r\n        var terrainDepth = 128;\r\n        var terrainHalfWidth = terrainWidth / 2;\r\n        var terrainHalfDepth = terrainDepth / 2;\r\n        var terrainMaxHeight = 8;\r\n        var terrainMinHeight = -2;\r\n\r\n        var groundShape;\r\n        groundShape = this.createTerrainShape( heightData );\r\n        //var groundShape = new Ammo.btBoxShape( new Ammo.btVector3(128, 0.1, 128 ) );\r\n        //console.log(groundShape);\r\n\r\n        var groundTransform = new Ammo.btTransform();\r\n        groundTransform.setIdentity();\r\n        // Shifts the terrain, since bullet re-centers it on its bounding box.\r\n        groundTransform.setOrigin( new Ammo.btVector3( 0, ( terrainMaxHeight + terrainMinHeight ) / 2, 0 ) );\r\n        var groundMass = 0;\r\n        var groundLocalInertia = new Ammo.btVector3( 0, 0, 0 );\r\n        var groundMotionState = new Ammo.btDefaultMotionState( groundTransform );\r\n        var groundBody = new Ammo.btRigidBody( new Ammo.btRigidBodyConstructionInfo( groundMass, groundMotionState, groundShape, groundLocalInertia ) );\r\n        this.world.addRigidBody( groundBody );\r\n\r\n    }\r\n\r\n    createObjectMaterial() {\r\n        var c = Math.floor( Math.random() * ( 1 << 24 ) );\r\n        return new THREE.MeshPhongMaterial( { color: c } );\r\n    }\r\n\r\n    createTerrainShape(heightData) {\r\n        var terrainWidthExtents = 128;\r\n        var terrainDepthExtents = 128;\r\n        //var terrainWidth = 128;\r\n        //var terrainDepth = 128;\r\n        var terrainWidth = 5;\r\n        var terrainDepth = 5;\r\n\r\n        var terrainHalfWidth = terrainWidth / 2;\r\n        var terrainHalfDepth = terrainDepth / 2;\r\n        var terrainMaxHeight = 8;\r\n        var terrainMinHeight = -2;\r\n        var ammoHeightData = null;\r\n\r\n        // This parameter is not really used, since we are using PHY_FLOAT height data type and hence it is ignored\r\n        var heightScale = 1;\r\n        // Up axis = 0 for X, 1 for Y, 2 for Z. Normally 1 = Y is used.\r\n        var upAxis = 1;\r\n        // hdt, height data type. \"PHY_FLOAT\" is used. Possible values are \"PHY_FLOAT\", \"PHY_UCHAR\", \"PHY_SHORT\"\r\n        var hdt = \"PHY_FLOAT\";\r\n        // Set this to your needs (inverts the triangles)\r\n        var flipQuadEdges = false;\r\n        // Creates height data buffer in Ammo heap\r\n        ammoHeightData = Ammo._malloc( 4 * terrainWidth * terrainDepth );\r\n        // Copy the javascript height data array to the Ammo one.\r\n        var p = 0;\r\n        var p2 = 0;\r\n        for ( var j = 0; j < terrainDepth; j ++ ) {\r\n            for ( var i = 0; i < terrainWidth; i ++ ) {\r\n                // write 32-bit float data to memory\r\n                Ammo.HEAPF32[ammoHeightData + p2 >> 2] = heightData[ p ];\r\n                //console.log(heightData[ p ]);\r\n                p ++;\r\n                // 4 bytes/float\r\n                p2 += 4;\r\n            }\r\n        }\r\n\r\n        // Creates the heightfield physics shape\r\n        var heightFieldShape = new Ammo.btHeightfieldTerrainShape(\r\n\r\n            terrainWidth,\r\n            terrainDepth,\r\n\r\n            ammoHeightData,\r\n\r\n            heightScale,\r\n            terrainMinHeight,\r\n            terrainMaxHeight,\r\n\r\n            upAxis,\r\n            hdt,\r\n            flipQuadEdges\r\n        );\r\n\r\n        // Set horizontal scale\r\n        var scaleX = terrainWidthExtents / ( terrainWidth - 1 );\r\n        var scaleZ = terrainDepthExtents / ( terrainDepth - 1 );\r\n        heightFieldShape.setLocalScaling( new Ammo.btVector3( scaleX, 1, scaleZ ) );\r\n\r\n        heightFieldShape.setMargin( 0.05 );\r\n\r\n        return heightFieldShape;\r\n\r\n    }\r\n\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}